{"version":3,"sources":["views/AdminDashboard/ClinicalTrial/ClinicalTrialProfile.js","views/Loader/Loader.js","../node_modules/reactstrap/es/Row.js","core/functions/commonFunction.js"],"names":["ClinicalTrialProfile","props","scrollToTop","window","scrollTo","state","modal","loading","clinicalTrialDetails","clinicalTrialSchedular","selectedDoctorDetails","selectedPatientDetails","stagesData","params","this","match","undefined","clinicalTrialId","getClinicalTrialDetails","history","goBack","setState","commonService","getAPIWithAccessToken","then","res","data","status","toast","error","message","catch","err","response","localStorage","clear","push","loaderElement","className","onClick","clinicalTrial","class","map","doctorInfo","doctorIndex","key","profile","firstName","lastName","length","patientInfo","patientIndex","commonFunction","getDate","startDate","endDate","stageInfo","stageIndex","parseInt","relatedData","selectedPatient","selectedPatientIndex","dataInfo","stage","doctorTemplateFormData","scheduleDate","patientTemplateFormData","Component","Loader","role","rowColsPropType","oneOfType","number","string","propTypes","tag","noGutters","bool","cssModule","object","form","xs","sm","md","lg","xl","defaultProps","widths","Row","Tag","attributes","colClasses","forEach","colWidth","i","colSize","isXs","classes","createElement","$utcTime","$format","convertedDate","newDate","Date","getDay","getYear","getFullYear","getMonth","getHour","getHours","getMinutes","getSeconds","callDuration","delta","Math","ceil","hours","floor","minutes","seconds","d","month","day"],"mappings":"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","file":"static/js/44.8da48882.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { toast } from 'react-toastify'\r\n//import  { Link } from 'react-router-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\nimport commonFunction from '../../../core/functions/commonFunction';\r\nimport Loader from '../../Loader/Loader';\r\nimport './ClinicalTrialProfile.css';\r\nclass ClinicalTrialProfile extends Component {\r\n   constructor(props){\r\n      super(props);\r\n      this.state = {\r\n         modal: false, \r\n         loading: false, \r\n         clinicalTrialDetails: {clinicalTrialSchedular: [],selectedDoctorDetails: [], selectedPatientDetails: [], stagesData: []}    \r\n      } \r\n   }\r\n// Fetch the doctor List\r\ncomponentDidMount() { \r\n   const { match: { params } } = this.props;\r\n    if(params.clinicalTrialId !== undefined && params.clinicalTrialId !==\"\") {\r\n      this.getClinicalTrialDetails(params.clinicalTrialId);\r\n    }\r\n    else\r\n       this.props.history.goBack();\r\n   \r\n}\r\ngetClinicalTrialDetails(clinicalTrialId){\r\n    \r\n    \r\n    this.setState( { loading: true}, () => { \r\n      //let organizationIdQuery = \"\";\r\n      commonService.getAPIWithAccessToken(\"clinical-trial/\"+clinicalTrialId)\r\n      .then( res => {\r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( {  loading: false } );\r\n          toast.error(res.data.message);    \r\n          return;\r\n        }   \r\n        \r\n        this.setState({loading: false, clinicalTrialDetails: res.data.data});     \r\n        \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else { \r\n          this.setState( {  loading: false } );        \r\n          toast.error(err.message); \r\n\r\n        }\r\n      } )\r\n    })\r\n  }\r\nscrollToTop = () => window.scrollTo(0, 0);\r\nrender() {\r\nconst { loading, clinicalTrialDetails } = this.state;  \r\nlet loaderElement ='';\r\n    \r\n    if(loading)\r\n      loaderElement = <Loader /> \r\nreturn (\r\n<div className=\"clinical-trial-info-card\">\r\n   <div className=\"clinical-trial-info\">\r\n      {loaderElement}\r\n      <div className=\"btn addBtn btn-back\" onClick= {() => {this.props.history.goBack()}}>Back</div>\r\n      <div className=\"profile-details-inner\">\r\n         <div className=\"profile-C-M\">\r\n            <div className=\"profile-pic\"> </div>\r\n            <span className=\"profile-1-B-inner\">{this.state.clinicalTrialDetails.clinicalTrial}</span>\r\n         </div>\r\n         <div className=\"clinical-test\">\r\n            <div className=\"btn clinical-btn\">Clinical Test Detail</div>\r\n            <Row>\r\n               <div class=\"col-md-3\">\r\n                  <div class=\"border-R-1 \">\r\n                     <p class=\"doctors-H-C\">Doctors</p>\r\n                     <p class=\"font-w\">\r\n                        {\r\n                           clinicalTrialDetails.selectedDoctorDetails.map((doctorInfo, doctorIndex) => \r\n                              <t key = {doctorIndex}>\r\n                                 {doctorInfo.profile.firstName} {doctorInfo.profile.lastName} {clinicalTrialDetails.selectedDoctorDetails.length - 2 === doctorIndex ? ' & ' : doctorIndex !== 0 && clinicalTrialDetails.selectedDoctorDetails.length - 1 !== doctorIndex ? ', ' : ''}\r\n                              </t>\r\n                           )\r\n                        }\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n               <div class=\"col-md-3\">\r\n                  <div class=\"border-R-2\">\r\n                     <p class=\"doctors-H-C\">Patients</p>\r\n                     <p class=\"font-w\">\r\n                        {\r\n                           clinicalTrialDetails.selectedPatientDetails.map((patientInfo, patientIndex) => \r\n                              <t key = {patientIndex}>\r\n                                 {patientInfo.profile.firstName} {patientInfo.profile.lastName} {clinicalTrialDetails.selectedPatientDetails.length - 2 === patientIndex ? ' & ' : patientIndex !== 0 && clinicalTrialDetails.selectedPatientDetails.length - 1 !== patientIndex ? ', ' : ''}\r\n                              </t>\r\n                           )\r\n                        }\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n               <div class=\"col-md-6 text-right\">\r\n                  {/*<div class=\"btn edit-details-T\">View Details</div>*/}\r\n               </div>\r\n            </Row>\r\n            <Row>\r\n               <div class=\"col-md-3\">\r\n                  <div class=\"border-R-1 \">\r\n                     <p class=\"doctors-H-C\">Test Tenure</p>\r\n                     <p class=\"font-w\">\r\n                        {`${commonFunction.getDate(clinicalTrialDetails.startDate)} to ${commonFunction.getDate(clinicalTrialDetails.endDate)}`} \r\n                     </p>\r\n                  </div>\r\n               </div>\r\n               <div class=\"col-md-4\">\r\n                  <div class=\"border-R-2\">\r\n                     <p class=\"doctors-H-C\">Visit</p>\r\n                     <p class=\"font-w\">\r\n                        {\r\n                           clinicalTrialDetails.stagesData.map((stageInfo, stageIndex) => \r\n                              <t key = {stageIndex}>\r\n                                 Visit {parseInt(stageIndex) + 1} {clinicalTrialDetails.stagesData.length - 2 === stageIndex ? ' & ' : stageIndex !== 0 && clinicalTrialDetails.stagesData.length - 1 !== stageIndex ? ', ' : ''}\r\n                              </t>\r\n                           )\r\n                        }\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n            </Row>\r\n         </div>\r\n\r\n         <div className=\"clinical-test\">\r\n            <div className=\"btn clinical-btn\">Appoinment Assignment Detail</div>\r\n            <Row>\r\n               {\r\n                  clinicalTrialDetails.selectedDoctorDetails.map((doctorInfo, doctorIndex) => \r\n                     <div class=\"col-md-4\" key = {doctorIndex}>\r\n                        <div class={doctorIndex === 0 || doctorIndex % 3 !== 1 ? \"Assignment-detail\" : \"border-R-2\"}>\r\n                           <p class=\"doctors-H-C\">{doctorIndex === 0 ? 'Assignments' : ' '}</p>\r\n                           <p class=\"font-w\">{doctorInfo.profile.firstName } {doctorInfo.profile.lastName}</p>\r\n                           {\r\n                              doctorInfo.relatedData.map((selectedPatient, selectedPatientIndex) => \r\n                                 <p class=\"font-w\" key = {selectedPatientIndex}>{parseInt(selectedPatientIndex)+1}. {selectedPatient.patientInfo.firstName} {selectedPatient.patientInfo.lastName}</p>\r\n                              )\r\n                           }\r\n                           \r\n                        </div>\r\n                     </div>\r\n                  )\r\n               }\r\n               \r\n               <div class=\"col-md-4 text-right\">\r\n                  {/*<div class=\"btn edit-details-T\">View Details</div>*/}\r\n               </div>\r\n            </Row>\r\n         </div>\r\n\r\n         <div className=\"clinical-test\">\r\n            \r\n            <div className=\"btn clinical-btn\">Assign & Review Form</div>\r\n            <Row>\r\n               <div class=\"col-md-12 text-right\">\r\n                  {/*<div class=\"btn edit-details-T\">View Details</div>*/}\r\n               </div>\r\n            </Row>\r\n            {\r\n               clinicalTrialDetails.selectedDoctorDetails.map((doctorInfo, doctorIndex) => \r\n                  <div key = {doctorIndex}>\r\n                     <div className=\"Heading-assign mt-2\">{doctorInfo.profile.firstName} {doctorInfo.profile.lastName}</div>\r\n                        <Row>\r\n                           {\r\n                              doctorInfo.relatedData.map((dataInfo, selectedPatientIndex) =>\r\n                              <div class=\"col-md-4\" key = {selectedPatientIndex}>\r\n                                 <div class=\"border-R-2  mt-2\">\r\n                                    <p class=\"doctors-H-C\">Visit {dataInfo.stage} ({`${commonFunction.getDate(clinicalTrialDetails.stagesData[parseInt(dataInfo.stage) -1].startDate)} to ${commonFunction.getDate(clinicalTrialDetails.stagesData[parseInt(dataInfo.stage) -1].endDate)}`})</p>\r\n                                    <p class=\"font-w\">{dataInfo.doctorTemplateFormData}</p>\r\n                                    <p class=\"font-w\">Schedule Date: {commonFunction.getDate(dataInfo.scheduleDate)}</p>\r\n                                 </div>\r\n                              </div>\r\n                              )\r\n                           }\r\n                           \r\n                        </Row>\r\n                  </div>\r\n               )\r\n            }\r\n\r\n            {\r\n               clinicalTrialDetails.selectedPatientDetails.map((doctorInfo, doctorIndex) => \r\n                  <div key = {doctorIndex}>\r\n                     <div className=\"Heading-assign mt-2\">{doctorInfo.profile.firstName} {doctorInfo.profile.lastName}</div>\r\n                        <Row>\r\n                           {\r\n                              doctorInfo.relatedData.map((dataInfo, selectedPatientIndex) =>\r\n                              <div class=\"col-md-4\" key = {selectedPatientIndex}>\r\n                                 <div class=\"border-R-2  mt-2\">\r\n                                    <p class=\"doctors-H-C\">Visit {dataInfo.stage} ({`${commonFunction.getDate(clinicalTrialDetails.stagesData[parseInt(dataInfo.stage) -1].startDate)} to ${commonFunction.getDate(clinicalTrialDetails.stagesData[parseInt(dataInfo.stage) -1].endDate)}`})</p>\r\n                                    <p class=\"font-w\">{dataInfo.patientTemplateFormData}</p>\r\n                                    <p class=\"font-w\">Schedule Date: {commonFunction.getDate(dataInfo.scheduleDate)}</p>\r\n                                 </div>\r\n                              </div>\r\n                              )\r\n                           }\r\n                           \r\n                        </Row>\r\n                  </div>\r\n               )\r\n            }\r\n            \r\n         </div>\r\n\r\n      </div>\r\n      \r\n   </div>\r\n</div>\r\n)\r\n}\r\n}\r\nexport default ClinicalTrialProfile;","import React from 'react';\nimport \"./Loader.css\"\nconst Loader = () => {\n    return (\n        <div className=\"loaderSection\">\n             <div className=\"spinner-border text-primary\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n              </div>\n        </div>\n    );\n}\n\nexport default Loader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","class commonFunction {\n\n    getDateTime($utcTime, $format= 'YYYY-MM-DD H:i:s') {\n        var convertedDate = \"\";\n        if($utcTime !== undefined && $utcTime !== \"\") {\n            let newDate = new Date($utcTime);\n            let getDay = newDate.getDate();\n            getDay = (getDay < 10) ? '0' + getDay : getDay;\n            let getYear = newDate.getFullYear();            \n            let getMonth = newDate.getMonth();\n            getMonth = getMonth + 1;\n            getMonth = (getMonth < 10) ? '0' + getMonth : getMonth;\n            let getHour = newDate.getHours();\n            getHour = (getHour < 10) ? '0' + getHour : getHour;\n            let getMinutes = newDate.getMinutes();\n            getMinutes = (getMinutes < 10) ? '0' + getMinutes : getMinutes;\n            let getSeconds = newDate.getSeconds();\n            getSeconds = (getSeconds < 10) ? '0' + getSeconds : getSeconds;\n            if($format === 'YYYY-MM-DD H:i:s')\n                convertedDate = getYear+'-'+getMonth+'-'+getDay+' '+getHour+':'+getMinutes+':'+getSeconds;\n            else if($format === 'DD-MM-YYYY H:i:s')\n                convertedDate = getDay+'-'+getMonth+'-'+getYear+' '+getHour+':'+getMinutes+':'+getSeconds;\n            else if($format === 'DD-MM-YYYY H:i')\n                convertedDate = getDay+'-'+getMonth+'-'+getYear+' '+getHour+':'+getMinutes;\n            else if($format === 'YYYY/MM/DD H:i:s')\n                convertedDate = getYear+'/'+getMonth+'/'+getDay+' '+getHour+':'+getMinutes+':'+getSeconds;\n            else if($format === 'MM/DD/YYYY H:i:s')\n                convertedDate = getMonth+'/'+getDay+'/'+getYear+' '+getHour+':'+getMinutes+':'+getSeconds;\n            else if($format === 'DD/MM/YYYY H:i:s')\n                convertedDate = getDay+'/'+getMonth+'/'+getYear+' '+getHour+':'+getMinutes+':'+getSeconds;\n\n        }\n        return convertedDate;\n    }\n    getDate($utcTime, $format= 'MM/DD/YYYY') {\n        var convertedDate = \"\";\n        if($utcTime !== undefined && $utcTime !== \"\") {\n            let newDate = new Date($utcTime);\n            let getDay = newDate.getDate();\n            getDay = (getDay < 10) ? '0' + getDay : getDay;\n            let getYear = newDate.getFullYear();            \n            let getMonth = newDate.getMonth();\n            getMonth = getMonth + 1;\n            getMonth = (getMonth < 10) ? '0' + getMonth : getMonth;\n           \n            if($format === 'YYYY-MM-DD')\n                convertedDate = getYear+'-'+getMonth+'-'+getDay;\n            else if($format === 'DD-MM-YYYY')\n                convertedDate = getDay+'-'+getMonth+'-'+getYear;\n            else if($format === 'YYYY/MM/DD')\n                convertedDate = getYear+'/'+getMonth+'/'+getDay;\n            else if($format === 'MM/DD/YYYY')\n                convertedDate = getMonth+'/'+getDay+'/'+getYear;\n            else if($format === 'DD/MM/YYYY')\n                convertedDate = getDay+'/'+getMonth+'/'+getYear;\n\n        }\n        return convertedDate;\n    }\n\n    convertTime(callDuration) {\n        if(callDuration === undefined || callDuration < 0)\n            return `0 seconds`;\n        let delta = Math.ceil(callDuration);\n\n        // calculate (and subtract) whole hours\n        let hours = Math.floor(delta / 3600) % 24;\n        delta -= hours * 3600;\n\n        // calculate (and subtract) whole minutes\n        let minutes = Math.floor(delta / 60) % 60;\n        delta -= minutes * 60;\n\n        // what's left is seconds\n        let seconds = delta % 60;\n\n        if(hours > 0 && minutes > 0 && seconds > 0 )\n          return `${hours} hours ${minutes} minutes ${seconds} seconds`;\n        else if(minutes > 0 && seconds > 0 )\n          return `${minutes} minutes ${seconds} seconds`;\n        else if(seconds > 0 )\n          return `${seconds} seconds`;\n        else \n          return `0 seconds`;\n    }\n    getcurrentDate(){\n        var d = new Date();\n\n        var month = d.getMonth()+1;\n        var day = d.getDate();\n\n        var output = d.getFullYear() + '_' +\n            ((''+month).length<2 ? '0' : '') + month + '_' +\n            ((''+day).length<2 ? '0' : '') + day;\n        return output;\n    }\n}\n\nexport default new commonFunction();\n"],"sourceRoot":""}