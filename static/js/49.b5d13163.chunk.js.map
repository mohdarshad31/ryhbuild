{"version":3,"sources":["views/AdminDashboard/Users/UsersData.js","views/AdminDashboard/Users/Users.js","views/Loader/Loader.js"],"names":["UsersData","props","state","buttonProcessing","rowIndex","dataTableItem","this","editPaitentAction","deletePaitentAction","rowsItem","data","entries","i","orgnization","console","log","orgInfo","paitentName","firstName","lastName","email","phoneNumber","address","city","country","skype_id","status","commonService","getUserStatus","action","authId","profileId","assign_trial_category","userAssignPracticeInfo","length","map","item","categoryInfo","categoryName","join","push","columns","label","name","options","filter","customBodyRender","value","tableMeta","updateValue","title","className","disabled","onClick","editPaitentItem","to","color","window","confirm","deletePaitentItem","search","viewColumns","searchOpen","print","download","responsive","selectableRows","textLabels","body","noMatch","dataTableLoadingStatus","toolTip","columnHeaderTooltip","column","fixedHeaderOptions","xAxis","yAxis","Component","Users","changeHandler","event","target","formField","setState","changeTrialHandler","trialCategoryId","subPracticeCategoryList","toggle","modal","formValid","formProccessing","paitent_name","first_name","last_name","postalCode","role","formErrors","contact_person","error","changeFilterHandler","filterItem","changeCategoryHandle","templateListName","getTemplateList","loading","userList","latitude","longitude","errors","items","filter_paitent_id","custom_search","filter_assign_trial_category","categoryList","templateList","deepProfileTemplateList","practiceCategoryList","trialSubCategoryId","assignTrialInfo","handleEditPaitent","bind","submitHandler","handleDeletePaitent","filterPaitentsList","resetSearchFilter","setLatitudeLongitude","handleInputChange","handleInputKeyDown","handleRemoveItem","addTrialInfoToPatient","removeAssignTrial","latLng","postal_code","paitentQuery","undefined","statusTxt","getStatusVal","getAPIWithAccessToken","then","res","toast","message","profileList","catch","err","response","localStorage","clear","history","categoryId","setTemplateList","hideSubcat","consent_template_id","deep_profile_template_id","preventDefault","validateForm","formInputField","assignInfo","subCategoryId","formData","consent_category_id","deep_profile_category_id","paitentInfo","putAPIWithAccessToken","success","postAPIWithAccessToken","pattern","RegExp","trim","test","currentObj","setTimeout","deleteAPIWithAccessToken","filter_doctor_id","evt","input","keyCode","slice","index","subCategoryInfo","selectedInfo","splice","loaderElement","Loader","processingBtnText","Row","Col","lg","Card","CardHeader","Button","type","md","FormGroup","Label","htmlFor","Input","placeholder","id","onChange","categoryItem","SetCategoryDropDownItem","key","Modal","isOpen","Form","onSubmit","noValidate","ModalBody","invalid","required","selectedCategory","templateItem","SetTemplateDropDownItem","subCategoryName","assignTrialDetails","ModalFooter","templateDetail","templateId","templateName"],"mappings":"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","file":"static/js/49.b5d13163.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport  { Link } from 'react-router-dom';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport commonService from '../../../core/services/commonService';\r\nclass UsersData extends Component {\r\n  \r\n constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: [],\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  /* Edit Paitent Info */\r\n  editPaitentItem(rowIndex){    \r\n    this.props.editPaitentAction(rowIndex);\r\n  }\r\n\r\n  deletePaitentItem(rowIndex){    \r\n    this.props.deletePaitentAction(rowIndex);\r\n  }\r\n\r\n  render() {\r\n    \r\n    let rowsItem = [];    \r\n    for(const [i, orgnization] of this.props.data.entries()){\r\n      console.log(i);\r\n      let orgInfo = {\r\n       \r\n        paitentName: `${orgnization.firstName} ${orgnization.lastName}`,\r\n        email: orgnization.email,\r\n        phoneNumber: orgnization.phoneNumber || \" \",\r\n        address: orgnization.address || \" \",\r\n        city: orgnization.city || \" \",      \r\n        state: orgnization.state || \" \",\r\n        country: orgnization.country || \" \",\r\n        skype_id: orgnization.skype_id || \" \",\r\n        status: commonService.getUserStatus(orgnization.status), //orgnization.status ? \"Active\" : \"Inactive\",   \r\n        action: \"\",\r\n        authId: orgnization.authId,\r\n        profileId: orgnization.profileId,\r\n        assign_trial_category: orgnization.userAssignPracticeInfo.length > 0 ? orgnization.userAssignPracticeInfo.map(item => item.categoryInfo.categoryName).join(','):  \" \",\r\n\r\n      }      \r\n      rowsItem.push(orgInfo);\r\n    }      \r\n    const columns = [      \r\n      {\r\n        label: 'Patient Name',\r\n        name: 'paitentName',\r\n      },\r\n      \r\n      {\r\n        label: 'Email',\r\n        name: 'email',\r\n      },\r\n      {\r\n        label: 'Phone Number',\r\n        name: 'phoneNumber',\r\n      },\r\n      {\r\n        label: 'Skype ID',\r\n        name: 'skype_id',\r\n      },\r\n       {\r\n        label: 'Address',\r\n        name: 'address',\r\n      },\r\n      {\r\n        label: 'Assign Trial Category',\r\n        name: 'assign_trial_category',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: true,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n            let profileId = this.props.data[i].profileId;\r\n            return (\r\n             <p><button title=\"Edit Paitent\" className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n          this.editPaitentItem(i)}><i className=\"fa fa-pencil\"></i> </button>\r\n          <Link title=\"View Paitent Details\" className=\"btn-view\" to={`/admin/users/${profileId}`}><i className=\"fa fa-eye\"></i> </Link>\r\n          \r\n          <button title=\"Delete Paitent\" className=\"btn-delete\" color=\"warning\" disabled={this.state.buttonProcessing} onClick={() => {if( window.confirm('Are you sure you wish to delete this paitent?'))\r\n          this.deletePaitentItem(i)}}><i className=\"fa fa-trash\"></i></button></p>\r\n            );\r\n          },\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: false,viewColumns: false,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: false,\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Processing........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    \r\n    return (\r\n      <MUIDataTable\r\n        \r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default UsersData;","import React, { Component } from 'react';\r\nimport { Card, CardHeader, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalBody, ModalFooter} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport  { Link } from 'react-router-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\n//import AutoCompletePlaces from '../../../core/google-map/AutoCompletePlaces';\r\nimport Loader from '../../Loader/Loader';\r\nimport UsersData from './UsersData';\r\nimport './Users.css'\r\n\r\nclass Users extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      userList: [],\r\n      modal: false, \r\n      rowIndex: -1,\r\n      formProccessing: false,\r\n      formField: {paitent_name: '', email: '', first_name: '', last_name: '', skype_id: '', latitude: '', longitude: '',  phoneNumber: '', address: '', city: '', state: '', country: '', postalCode: '', role: '', status: '' },\r\n      errors: {paitent_name: '', email: '', contact_person: '', role: '', address: '', error: ''},\r\n      formValid: true,\r\n      items: [],\r\n      filterItem: { filter_paitent_id: '', country: '', state: '', custom_search: '', filter_assign_trial_category: ''},\r\n      categoryList: [],\r\n      templateList: [],\r\n      deepProfileTemplateList: [],\r\n      practiceCategoryList: [],\r\n      trialCategoryId: \"\",\r\n      trialSubCategoryId: \"\",\r\n      subPracticeCategoryList: [],\r\n      assignTrialInfo: []\r\n    } \r\n\r\n    this.handleEditPaitent = this.handleEditPaitent.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleDeletePaitent = this.handleDeletePaitent.bind(this);\r\n    this.filterPaitentsList = this.filterPaitentsList.bind(this);\r\n    this.resetSearchFilter = this.resetSearchFilter.bind(this);\r\n    this.setLatitudeLongitude = this.setLatitudeLongitude.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleInputKeyDown = this.handleInputKeyDown.bind(this);\r\n    this.handleRemoveItem = this.handleRemoveItem.bind(this);\r\n    this.subPracticeCategoryList = this.subPracticeCategoryList.bind(this);\r\n    this.addTrialInfoToPatient = this.addTrialInfoToPatient.bind(this);\r\n    this.removeAssignTrial = this.removeAssignTrial.bind(this);\r\n  }\r\n  componentDidMount() { \r\n    this.userList();\r\n    this.categoryList();\r\n    this.practiceCategoryList();\r\n  }\r\n  setLatitudeLongitude(address, latLng, city = \"\", state = \"\", country = \"\", postal_code = \"\"){\r\n    let formField = this.state.formField;\r\n    formField.state = state;\r\n    formField.latitude = latLng.latitude;\r\n    formField.longitude = latLng.longitude;\r\n    formField.country = country;formField.city = city;formField.postalCode = postal_code;\r\n    formField.address = address\r\n    this.setState({ formField: formField });\r\n  }\r\n\r\n  /*User List API*/\r\n  userList(filterItem = {}) {\r\n    let paitentQuery = \"\";\r\n    \r\n    if(filterItem.country !== undefined && filterItem.country !== \"\" ) \r\n      paitentQuery += (paitentQuery !==\"\" ) ? \"&location=\"+filterItem.country: \"?location=\"+filterItem.country;\r\n    if(filterItem.custom_search !== undefined && filterItem.custom_search !== \"\" ) \r\n      paitentQuery += (paitentQuery !==\"\" ) ? \"&emailOrName=\"+filterItem.custom_search: \"?emailOrName=\"+filterItem.custom_search;\r\n    if(filterItem.filter_assign_trial_category !== undefined && filterItem.filter_assign_trial_category !== \"\" ) \r\n      paitentQuery += (paitentQuery !==\"\" ) ? \"&practiceCategory=\"+filterItem.filter_assign_trial_category: \"?practiceCategory=\"+filterItem.filter_assign_trial_category;\r\n    if(filterItem.status !== undefined && filterItem.status !== \"\" ) {\r\n      let statusTxt = 1;\r\n      statusTxt = commonService.getStatusVal(filterItem.status);\r\n      paitentQuery += (paitentQuery !==\"\" ) ? \"&status=\"+statusTxt: \"?status=\"+statusTxt;\r\n    }\r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken(`profile/list`+paitentQuery)\r\n        .then( res => {\r\n          console.log(res);\r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( {  loading: false } );\r\n            toast.error(res.data.message);    \r\n            return;\r\n          }   \r\n          \r\n          this.setState({loading:false, userList: res.data.data.profileList});     \r\n         \r\n        } )\r\n        .catch( err => {   \r\n               \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message); \r\n          }  \r\n        } )\r\n    } )\r\n  }\r\n\r\n  categoryList() {   \r\n   \r\n    commonService.getAPIWithAccessToken('template/category')\r\n      .then( res => {\r\n        console.log(res);\r\n         \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( {  loading: false } );\r\n          toast.error(res.data.message);    \r\n          return;\r\n        }   \r\n\r\n        this.setState({categoryList: res.data.data});     \r\n       \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else           \r\n          toast.error(err.message);    \r\n        \r\n      } )\r\n    \r\n  }\r\n\r\n  practiceCategoryList() {   \r\n   \r\n    commonService.getAPIWithAccessToken('category')\r\n      .then( res => {\r\n        console.log(res);\r\n         \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( {  loading: false } );\r\n          toast.error(res.data.message);    \r\n          return;\r\n        }   \r\n\r\n        this.setState({practiceCategoryList: res.data.data});     \r\n       \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else           \r\n          toast.error(err.message);    \r\n        \r\n      } )\r\n    \r\n  }\r\n\r\n  subPracticeCategoryList(categoryId) {\r\n    if(categoryId === \"\") {\r\n      this.setState({subPracticeCategoryList: [], trialSubCategoryId: \"\"});\r\n      return;\r\n    }\r\n    this.setState({loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('category/'+categoryId)\r\n      .then( res => {\r\n        console.log(res);\r\n         \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( {  loading: false } );\r\n          toast.error(res.data.message);    \r\n          return;\r\n        }   \r\n\r\n        this.setState({subPracticeCategoryList: res.data.data, trialSubCategoryId: \"\", loading: false});     \r\n       \r\n      } )\r\n      .catch( err => {   \r\n        this.setState({loading: false});      \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else           \r\n          toast.error(err.message);    \r\n        \r\n      } )\r\n    });\r\n\r\n  }\r\n\r\n  /*Get Template List*/\r\n  getTemplateList(categoryId, setTemplateList = \"templateList\", hideSubcat = true){\r\n    \r\n    if(categoryId === \"\") {  \r\n      const formField = this.state.formField;    \r\n      formField.consent_template_id = '';\r\n      this.setState({ formField: formField, templateList: [] });\r\n      return;\r\n    }\r\n    this.setState( { loading: true}, () => { \r\n      //let organizationIdQuery = \"\";\r\n      commonService.getAPIWithAccessToken(\"template?categoryId=\"+categoryId)\r\n      .then( res => {\r\n        console.log(res);\r\n         const formField = this.state.formField;\r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( {  loading: false } );\r\n          toast.error(res.data.message);    \r\n          return;\r\n        }   \r\n        if(hideSubcat){\r\n          if(setTemplateList === \"templateList\")\r\n            formField.consent_template_id = '';\r\n          else\r\n            formField.deep_profile_template_id = '';\r\n        }\r\n        this.setState({[setTemplateList]: res.data.data, formField: formField, loading: false});     \r\n        \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else { \r\n          this.setState( {  loading: false } );        \r\n          toast.error(err.message); \r\n\r\n        }\r\n      } )\r\n    })\r\n  }\r\n\r\n\r\n  /* Submit Form Handler*/\r\n  submitHandler (event) {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    \r\n    if(this.validateForm()){\r\n      return false;\r\n    }\r\n    \r\n    this.setState( { formProccessing: true}, () => {\r\n      const formInputField = this.state.formField;\r\n      let userAssignPracticeInfo = [];\r\n      for(let assignInfo of this.state.assignTrialInfo){\r\n        userAssignPracticeInfo.push({categoryId: assignInfo.categoryId, subCategoryId: assignInfo.subCategoryId});\r\n      }\r\n      const formData = {\r\n        \"email\": formInputField.email,\r\n        \"firstName\": formInputField.first_name,\r\n        \"lastName\": formInputField.last_name, \r\n        \"phoneNumber\": formInputField.phoneNumber, \r\n        \"address\": formInputField.address, \r\n        \"roleName\": formInputField.role, \r\n        \"city\": formInputField.city, \r\n        \"state\": formInputField.state, \r\n        \"latitude\": formInputField.latitude,\r\n        \"longitude\": formInputField.longitude, \r\n        \"country\": formInputField.country, \r\n        \"postalCode\": formInputField.postalCode,\r\n        \"skype_id\": formInputField.skype_id,\r\n        \"accept_trial\": this.state.items.join(','),\r\n        \"consent_category_id\": formInputField.consent_category_id,\r\n        \"consent_template_id\": formInputField.consent_template_id,\r\n        \"deep_profile_category_id\": formInputField.deep_profile_category_id,\r\n        \"deep_profile_template_id\": formInputField.deep_profile_template_id,\r\n        \"status\": commonService.getStatusVal(formInputField.status),\r\n        \"userAssignPracticeInfo\": userAssignPracticeInfo\r\n      };\r\n\r\n\r\n      \r\n      const rowIndex = this.state.rowIndex;\r\n      if(rowIndex > -1) {\r\n        const paitentInfo = this.state.userList[rowIndex];\r\n        commonService.putAPIWithAccessToken('profile/'+paitentInfo.profileId, formData)\r\n        .then( res => {\r\n          \r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n           \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          \r\n          this.setState({ modal: false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.userList();\r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n        } )\r\n      }\r\n      else{\r\n        commonService.postAPIWithAccessToken('profile', formData)\r\n        .then( res => {\r\n          \r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) { \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          \r\n          this.setState({ modal: false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.userList();\r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n        } )\r\n      }\r\n    } );\r\n    \r\n  };\r\n  /* Input Field On changes*/\r\n  changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField });\r\n  };\r\n\r\n  changeTrialHandler = event => {\r\n    const value = event.target.value;\r\n    this.setState({trialCategoryId: value});\r\n    this.subPracticeCategoryList(value);\r\n  }\r\n  \r\n  \r\n  /* Validate Form */\r\n  validateForm() {\r\n    let formValid = false;\r\n    let formField = this.state.formField; \r\n    let errors = {};\r\n    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n    if(formField.first_name === undefined || formField.first_name.trim() === \"\"){\r\n      formValid = true;\r\n      errors['firstName'] = \"Full name field required!\";\r\n    }\r\n    if(formField.email === undefined || formField.email.trim() === \"\"){\r\n      formValid = true;\r\n      errors['email'] = \"Email field required!\";\r\n    }\r\n    else if(!(pattern.test(formField.email))){\r\n      formValid = true;\r\n      errors['email'] = \"Invalid email format\";\r\n    }\r\n    if(formField.consent_category_id === undefined || formField.consent_category_id.trim() === \"\"){\r\n      formValid = true;\r\n      errors['consent_category_id'] = \"Please select consent category!\";\r\n    }\r\n    if(formField.consent_template_id === undefined || formField.consent_template_id.trim() === \"\"){\r\n      formValid = true;\r\n      errors['consent_template_id'] = \"Please select consent template!\";\r\n    }\r\n    if(formField.deep_profile_category_id === undefined || formField.deep_profile_category_id.trim() === \"\"){\r\n      formValid = true;\r\n      errors['deep_profile_category_id'] = \"Please select medical history category!\";\r\n    }\r\n    if(formField.deep_profile_template_id === undefined || formField.deep_profile_template_id.trim() === \"\"){\r\n      formValid = true;\r\n      errors['deep_profile_template_id'] = \"Please select medical history template!\";\r\n    }\r\n    if(formField.status === undefined || formField.status.trim() === \"\"){\r\n      formValid = true;\r\n      errors['status'] = \"Status field required!\";\r\n    }\r\n    this.setState({errors:  errors});\r\n    return formValid;\r\n    \r\n  }\r\n  /* Set Error Class*/\r\n  errorClass(error) {\r\n    return(error.length === 0 ? '' : 'has-error');\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      rowIndex: -1,\r\n      formValid: false,\r\n      formProccessing : false,\r\n      formField: {paitent_name: '', email: '', first_name: '', last_name: '', phoneNumber: '', address: '', city: '', state: '', country: '', postalCode: '', role: '' },\r\n      formErrors: {paitent_name: '', email: '', contact_person: '', role: '', address: '', error: ''}\r\n    });\r\n  }\r\n  /* Edit paitent*/\r\n  handleEditPaitent(rowIndex){\r\n      const paitentInfo = this.state.userList[rowIndex];\r\n      let status = commonService.getUserStatus(paitentInfo.status);\r\n      \r\n      let formField = {\r\n        \r\n        email: paitentInfo.email, \r\n        first_name: paitentInfo.firstName, \r\n        last_name: paitentInfo.lastName, \r\n        phoneNumber: paitentInfo.phoneNumber, \r\n        address: paitentInfo.address, \r\n        city: paitentInfo.city, \r\n        state: paitentInfo.state, \r\n        country: paitentInfo.country, \r\n        postalCode: paitentInfo.postalCode,\r\n        skype_id: paitentInfo.skype_id || \"\",\r\n        consent_template_id: paitentInfo.consent_template_id || \"\",\r\n        consent_category_id: paitentInfo.consent_category_id || \"\",\r\n        deep_profile_category_id: paitentInfo.deep_profile_category_id || \"\",\r\n        deep_profile_template_id: paitentInfo.deep_profile_template_id || \"\",\r\n        status: status };\r\n      \r\n      let assignTrialInfo = paitentInfo.userAssignPracticeInfo || [];\r\n      this.setState({rowIndex: rowIndex, formField: formField, modal: true, formValid: true, formProccessing: false, assignTrialInfo: assignTrialInfo});\r\n      let currentObj = this;\r\n      setTimeout(function(){\r\n        currentObj.getTemplateList(paitentInfo.deep_profile_category_id, \"deepProfileTemplateList\", false);\r\n        currentObj.getTemplateList(paitentInfo.consent_category_id, \"templateList\", false);\r\n      }, 300);\r\n      \r\n\r\n  }\r\n  /* Delete paitent*/\r\n  handleDeletePaitent(rowIndex){\r\n    const paitentInfo = this.state.userList[rowIndex];\r\n    this.setState( { loading : true}, () => {   \r\n      commonService.deleteAPIWithAccessToken('profile', {profileId: paitentInfo.profileId})\r\n      .then( res => {\r\n        \r\n         \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n         \r\n          this.setState( { loading : false} );\r\n          toast.error(res.data.message);\r\n          return;\r\n        } \r\n        \r\n        this.setState({ modal: false, loading : false});\r\n        toast.success(res.data.message);\r\n        this.resetSearchFilter();\r\n       \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else\r\n          this.setState( { loading : false } );\r\n          toast.error(err.message);\r\n      } )\r\n    } );\r\n   \r\n    \r\n  }\r\n  filterPaitentsList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.userList(filterItem);\r\n  }\r\n\r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n  resetSearchFilter() {\r\n    this.setState({filterItem: { filter_doctor_id: '', country: '', state: '', custom_search: '', filter_assign_trial_category: ''}});\r\n    this.userList();\r\n  }\r\n\r\n\r\n  handleInputChange(evt) {\r\n    this.setState({ input: evt.target.value });\r\n  }\r\n\r\n  handleInputKeyDown(evt) {\r\n\r\n    if ( evt.keyCode === 13 ) {\r\n      const {value} = evt.target;\r\n      evt.preventDefault();\r\n      this.setState(state => ({\r\n        items: [...state.items, value],\r\n        input: ''\r\n      }));\r\n    }\r\n\r\n    if ( this.state.items.length && evt.keyCode === 8 && !this.state.input.length ) {\r\n\r\n      this.setState(state => ({\r\n        items: state.items.slice(0, state.items.length - 1)\r\n      }));\r\n    }\r\n  }\r\n\r\n  handleRemoveItem(index) {\r\n    return () => {\r\n      this.setState(state => ({\r\n        items: state.items.filter((item, i) => i !== index)\r\n      }));\r\n    }\r\n  }\r\n\r\n  changeCategoryHandle = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField });\r\n    let templateListName = \"templateList\";\r\n    if(name !== \"consent_category_id\")\r\n      templateListName = \"deepProfileTemplateList\";\r\n    this.getTemplateList(value, templateListName, value);\r\n  }\r\n\r\n  addTrialInfoToPatient (event) {\r\n    event.preventDefault();\r\n    if(this.state.trialCategoryId !== \"\" && this.state.trialSubCategoryId !== \"\"){\r\n      let assignTrialInfo = this.state.assignTrialInfo;\r\n      let trialCategoryId = this.state.trialCategoryId;\r\n      let trialSubCategoryId = this.state.trialSubCategoryId;\r\n      let checkAlreadyAssign = assignTrialInfo.filter(function(item) { return item.categoryId === trialCategoryId && item.subCategoryId === trialSubCategoryId;});\r\n      if( checkAlreadyAssign.length === 0 ) {\r\n        \r\n        let categoryInfo = this.state.practiceCategoryList.filter(function(item) { return item.categoryId === trialCategoryId;});\r\n        let subCategoryInfo = this.state.subPracticeCategoryList.filter(function(item) { return item.subCategoryId === trialSubCategoryId;});\r\n        if(categoryInfo.length > 0  && subCategoryInfo.length > 0){\r\n          let selectedInfo = {categoryId: trialCategoryId, subCategoryId: trialSubCategoryId, categoryInfo: categoryInfo[0], subCategoryInfo: subCategoryInfo[0]};\r\n          assignTrialInfo.push(selectedInfo);\r\n          this.setState({assignTrialInfo: assignTrialInfo, trialSubCategoryId: \"\"});\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  removeAssignTrial(index, event) {\r\n    event.preventDefault();\r\n    let assignTrialInfo = this.state.assignTrialInfo;\r\n    assignTrialInfo.splice(index, 1);\r\n    this.setState({assignTrialInfo: assignTrialInfo});\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { userList, loading, modal, formProccessing, errors, categoryList, templateList, deepProfileTemplateList, practiceCategoryList, subPracticeCategoryList } = this.state;     \r\n    let loaderElement = '';\r\n    \r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n    const processingBtnText = <>Save <i className=\"fa fa-spinner\"></i></>;\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          \r\n          {loaderElement}\r\n          <Col lg={12}>\r\n            <Card className=\"oep-card\">\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>Patient List</strong> \r\n                <Button color=\"\" className=\"categoryAdd-1\" type=\"button\" onClick={() => {this.props.history.push('/admin/users/new')}}> New Account Approval</Button>\r\n                <Button color=\"\" className=\"categoryAdd\" type=\"button\" onClick={this.toggle}><i className=\"fa fa-plus\"></i> Add Patient</Button>\r\n              </CardHeader>             \r\n                <Row>\r\n                  <Col md={12}>\r\n                    <div className=\"search-filter\">\r\n                    <Row>                      \r\n                      <Col md={\"3\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filter_doctor_id\">Search By Email/ Name</Label>            \r\n                          <Input type=\"text\" placeholder=\"Search By Email/Name\" id=\"custom_search\" name=\"custom_search\" value={this.state.filterItem.custom_search} onChange={this.changeFilterHandler} />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"3\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filter_assign_trial_category\">Search By Assign Trial Category</Label>            \r\n                          <Input type=\"select\" placeholder=\"Search By Assign Trial Category\" id=\"filter_assign_trial_category\" name=\"filter_assign_trial_category\" value={this.state.filterItem.filter_assign_trial_category} onChange={this.changeFilterHandler} >\r\n                            <option value=\"\">Select</option>\r\n                            {practiceCategoryList.map((categoryItem, index) =>\r\n                              <SetCategoryDropDownItem key={index} categoryItem={categoryItem}  />\r\n                            )}\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"3\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filter_doctor_id\">Search By Status</Label>            \r\n                          <Input type=\"select\" placeholder=\"Search By Status\" id=\"status\" name=\"status\" value={this.state.filterItem.status} onChange={this.changeFilterHandler}>\r\n                              <option value = \"\">Select</option>\r\n                              <option value=\"Active\">Active</option>\r\n                              <option value=\"Inactive\">Inactive</option>\r\n                              <option value=\"Pending\">Pending</option>\r\n                              <option value=\"Block\">Block</option>\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"3\"}>\r\n                        <FormGroup className=\"filter-button-section\"> \r\n                          <Button className=\"search-btn\" type=\"button\" onClick={this.filterPaitentsList}>Search</Button> \r\n                          <Button className=\"search-btn\" id=\"resetButton\" type=\"button\" onClick={this.resetSearchFilter}>Reset</Button> \r\n                        </FormGroup>             \r\n                      </Col>\r\n                    </Row>\r\n                     </div>  \r\n                  </Col>\r\n\r\n                  <Col lg={12}>\r\n                    <UsersData data={userList} editPaitentAction={this.handleEditPaitent} deletePaitentAction={this.handleDeletePaitent} dataTableLoadingStatus = {this.state.loading} />\r\n                  </Col>  \r\n                </Row>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Modal isOpen={modal} toggle={this.toggle} className=\"full-width-modal-section organization-modal\">\r\n          <div className=\"popup-Heading\">\r\n            <Row>\r\n             <Col md={\"6\"}>  \r\n                Add New Patient\r\n             </Col>\r\n             <Col md={\"6\"} className=\"text-right\" onClick={this.toggle}>  \r\n                Close\r\n             </Col>\r\n            </Row>\r\n          </div>\r\n          <Form onSubmit={this.submitHandler} noValidate>\r\n            <ModalBody>\r\n              <Row>\r\n                <Col md={\"4\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"first_name\">Full Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"Full Name *\" invalid={errors['firstName'] !== undefined && errors['firstName'] !== \"\"} id=\"first_name\" name=\"first_name\" value={this.state.formField.first_name} onChange={this.changeHandler} required />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['firstName']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n               { /*<Col md={\"4\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"last_name\">Last Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"Last Name\" id=\"last_name\" name=\"last_name\" value={this.state.formField.last_name} onChange={this.changeHandler}  />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['lastName']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col> */}\r\n                <Col md={\"4\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"email\">Email</Label>            \r\n                    <Input type=\"text\" placeholder=\"Email *\" invalid={errors['email'] !== undefined && errors['email'] !== \"\"} id=\"email\" name=\"email\" value={this.state.formField.email} onChange={this.changeHandler} required />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['email']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                \r\n                <Col md={\"4\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"phoneNumber\">Contact Number</Label>            \r\n                    <Input type=\"text\" placeholder=\"Contact Number \" id=\"phoneNumber\" name=\"phoneNumber\" value={this.state.formField.phoneNumber} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"4\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"skype_id\">Skype ID</Label>            \r\n                    <Input type=\"text\" placeholder=\"Skype ID \" id=\"skype_id\" name=\"skype_id\" value={this.state.formField.skype_id} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"8\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"address\">Address</Label>            \r\n                    <Input type=\"text\" placeholder=\"Address\" id=\"address\" name=\"address\" value={this.state.formField.address} onChange={this.changeHandler}  />\r\n                    {/*         \r\n                    <AutoCompletePlaces setLatitudeLongitude={this.setLatitudeLongitude} address = {this.state.formField.address} />  */}\r\n                  </FormGroup>\r\n                </Col>                \r\n                \r\n                <Col md={\"4\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"postalCode\">Postal Code</Label>            \r\n                    <Input type=\"text\" placeholder=\"Postal Code\" id=\"postalCode\" name=\"postalCode\" value={this.state.formField.postalCode} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                {/*<Col md = {\"4\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"accept_trial\">Accept Trial</Label> \r\n                  \r\n                    <ul className=\"suggest-container\">\r\n                      {this.state.items.map((item, i) => \r\n                        <li key={i} className= \"suggest-items\" onClick={this.handleRemoveItem(i)}>\r\n                          {item}\r\n                          <span>(x)</span>\r\n                        </li>\r\n                      )}\r\n                      <input\r\n                        className=\"suggest-input\"\r\n                        value={this.state.input}\r\n                        onChange={this.handleInputChange}\r\n                        onKeyDown={this.handleInputKeyDown} />\r\n                    </ul>\r\n                  </FormGroup>\r\n                </Col>*/}\r\n                <Col lg={\"4\"}>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"template_status\">Status</Label>            \r\n                      <Input type=\"select\" placeholder=\"Status *\" id=\"status\" name=\"status\" value={this.state.formField.status} invalid={errors['status'] !== undefined && errors['status'] !== \"\"} onChange={this.changeHandler} required >\r\n                        <option value=\"\">Select Status</option>\r\n                        <option value=\"Active\">Active</option>\r\n                        <option value=\"Inactive\">Inactive</option>\r\n                        <option value=\"Pending\">Pending</option>\r\n                        <option value=\"Block\">Block</option>\r\n                      </Input>\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors['status']}\r\n                      </div>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col lg={6}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"consent_category_id\">Consent Category <span className=\"mandatory\">*</span></Label>            \r\n                    <Input type=\"select\" placeholder=\"category Name *\" id=\"consent_category_id\" invalid={errors['consent_category_id'] !== undefined && errors['consent_category_id'] !== \"\"} name=\"consent_category_id\" value={this.state.formField.consent_category_id} onChange={this.changeCategoryHandle}  required>\r\n                      <option value=\"\">Select</option>\r\n                      {categoryList.map((categoryItem, index) =>\r\n                        <SetCategoryDropDownItem key={index} categoryItem={categoryItem} selectedCategory={this.state.formField.consent_category_id} />\r\n                      )}\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors['consent_category_id']}\r\n                      </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col lg={6}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"consent_template_id\">Select Consent Form <span className=\"mandatory\">*</span></Label>            \r\n                    <Input type=\"select\" placeholder=\"Subcategory Name *\" id=\"consent_template_id\" invalid={errors['consent_template_id'] !== undefined && errors['consent_template_id'] !== \"\"} name=\"consent_template_id\" value={this.state.formField.consent_template_id} onChange={this.changeHandler}  required>\r\n                      <option value=\"\">Select</option>\r\n                      {templateList.map((templateItem, index) =>\r\n                        <SetTemplateDropDownItem key={index} templateItem={templateItem} selectedCategory={this.state.formField.consent_template_id} />\r\n                      )}\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors['consent_template_id']}\r\n                    </div>\r\n                  </FormGroup>\r\n                  {this.state.formField.consent_template_id ? <Col lg={8} md={8}><div className=\"previewTemplateIcon\"><Link to={`/common/template/${this.state.formField.consent_template_id}`} target=\"_blank\" className=\"Preview-btn\">Preview Template </Link></div></Col>  : \"\"}\r\n                </Col>\r\n                <Col lg={6}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"deep_profile_category_id\">Select Medical History Category <span className=\"mandatory\">*</span></Label>            \r\n                    <Input type=\"select\" placeholder=\"category Name *\" id=\"deep_profile_category_id\" invalid={errors['deep_profile_category_id'] !== undefined && errors['deep_profile_category_id'] !== \"\"} name=\"deep_profile_category_id\" value={this.state.formField.deep_profile_category_id} onChange={this.changeCategoryHandle}  required>\r\n                      <option value=\"\">Select</option>\r\n                      {categoryList.map((categoryItem, index) =>\r\n                        <SetCategoryDropDownItem key={index} categoryItem={categoryItem} selectedCategory={this.state.formField.deep_profile_category_id} />\r\n                      )}\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors['deep_profile_category_id']}\r\n                      </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col lg={6}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"deep_profile_template_id\">Select Medical History Template <span className=\"mandatory\">*</span></Label>            \r\n                    <Input type=\"select\" placeholder=\"\" id=\"deep_profile_template_id\" invalid={errors['deep_profile_template_id'] !== undefined && errors['deep_profile_template_id'] !== \"\"} name=\"deep_profile_template_id\" value={this.state.formField.deep_profile_template_id} onChange={this.changeHandler}  required>\r\n                      <option value=\"\">Select</option>\r\n                      {deepProfileTemplateList.map((templateItem, index) =>\r\n                        <SetTemplateDropDownItem key={index} templateItem={templateItem} selectedCategory={this.state.formField.deep_profile_template_id} />\r\n                      )}\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors['deep_profile_template_id']}\r\n                    </div>\r\n                  </FormGroup>\r\n                  {this.state.formField.deep_profile_template_id ? <Col lg={8} md={8}><div className=\"previewTemplateIcon\"><Link to={`/common/template/${this.state.formField.deep_profile_template_id}`} target=\"_blank\" className=\"Preview-btn\">Preview Template </Link></div></Col>  : \"\"}\r\n                </Col>\r\n                <Col lg={5}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"assign_trail_category\">Assign Trial Category <span className=\"mandatory\">*</span></Label>            \r\n                    <Input type=\"select\" placeholder=\"\" id=\"assign_trail_category\" invalid={errors['assign_trail_category'] !== undefined && errors['assign_trail_category'] !== \"\"} name=\"assign_trail_category\" value={this.state.trialCategoryId} onChange={this.changeTrialHandler}  >\r\n                      <option value=\"\">Select</option>\r\n                      {practiceCategoryList.map((categoryItem, index) =>\r\n                        <SetCategoryDropDownItem key={index} categoryItem={categoryItem}  />\r\n                      )}\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors['assign_trail_category']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg={5}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"assign_trial_subcategory\">Assign Trial Subcategory<span className=\"mandatory\">*</span></Label>            \r\n                    <Input type=\"select\" placeholder=\"\" id=\"assign_trial_subcategory\" invalid={errors['assign_trial_subcategory'] !== undefined && errors['assign_trial_subcategory'] !== \"\"} name=\"assign_trial_subcategory\" value={this.state.trialSubCategoryId} onChange={(event) => {this.setState({trialSubCategoryId: event.target.value})}}  >\r\n                      <option value=\"\">Select</option>\r\n                      {subPracticeCategoryList.map((categoryItem, index) =>\r\n                        <SetCategoryDropDownItem key={index} categoryItem={{categoryId: categoryItem.subCategoryId, categoryName: categoryItem.subCategoryName}}  />\r\n                      )}\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors['assign_trial_subcategory']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"2\"}>  \r\n                        <div className=\"btn profie-btn addBtn-1\" disabled = {this.state.trialCategoryId !== \"\" && this.state.trialSubCategoryId ? true : false} onClick = {(event) => {this.addTrialInfoToPatient(event);}}>Add</div></Col>\r\n                {\r\n                  this.state.assignTrialInfo.length > 0 && <Col md = {\"12\"}>\r\n                    <div className=\"addDrs\">\r\n                      <Row>\r\n                        {\r\n                          this.state.assignTrialInfo.map((assignTrialDetails, index) =>\r\n                            <Col md= {6} key ={index}>\r\n                              <div className=\"select-user-info\">\r\n                                {`${assignTrialDetails.categoryInfo.categoryName} | ${assignTrialDetails.subCategoryInfo.subCategoryName}`}\r\n                                <button className=\"remove-selected-user-info\" onClick = {(event) => {this.removeAssignTrial(index, event)}}><i className=\"fa fa-times\"></i></button>\r\n                              </div>\r\n                            </Col> \r\n                          )\r\n                        }\r\n                      </Row>\r\n                    </div>\r\n                  </Col>\r\n                }     \r\n              </Row>           \r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <div className=\"btn-group-popup\">\r\n                <div className=\"btn btn-back-popup\" color=\"primary\" onClick={this.toggle}>Back</div>\r\n                <button className=\"btn btn-save-popup\" color=\"secondary\" disabled={formProccessing} type=\"submit\">{formProccessing ? processingBtnText : 'Save' }</button>\r\n              </div>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nfunction SetCategoryDropDownItem (props) {\r\n  const categoryItem = props.categoryItem;\r\n  return (<option value={categoryItem.categoryId} >{categoryItem.categoryName}</option>)\r\n}\r\n\r\nfunction SetTemplateDropDownItem(props){\r\n  const templateDetail = props.templateItem;\r\n  return (<option value={templateDetail.templateId} >{templateDetail.templateName}</option>)\r\n}\r\n\r\nexport default Users;\r\n","import React from 'react';\nimport \"./Loader.css\"\nconst Loader = () => {\n    return (\n        <div className=\"loaderSection\">\n             <div className=\"spinner-border text-primary\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n              </div>\n        </div>\n    );\n}\n\nexport default Loader;"],"sourceRoot":""}