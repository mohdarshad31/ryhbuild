{"version":3,"sources":["views/AdminDashboard/Users/UsersData.js","views/AdminDashboard/Users/Users.js","views/Loader/Loader.js"],"names":["UsersData","props","state","buttonProcessing","rowIndex","dataTableItem","this","editPaitentAction","deletePaitentAction","rowsItem","data","entries","i","orgnization","console","log","orgInfo","paitentName","firstName","lastName","email","phoneNumber","address","city","country","skype_id","status","commonService","getUserStatus","action","authId","profileId","assign_trial_category","userAssignPracticeInfo","length","map","item","categoryInfo","categoryName","join","push","columns","label","name","options","filter","customBodyRender","value","tableMeta","updateValue","title","className","disabled","onClick","editPaitentItem","to","color","window","confirm","deletePaitentItem","search","viewColumns","searchOpen","print","download","responsive","selectableRows","textLabels","body","noMatch","dataTableLoadingStatus","toolTip","columnHeaderTooltip","column","fixedHeaderOptions","xAxis","yAxis","Component","Users","changeHandler","event","target","formField","setState","changeTrialHandler","trialCategoryId","subPracticeCategoryList","toggle","modal","formValid","formProccessing","paitent_name","first_name","last_name","postalCode","role","formErrors","contact_person","error","editMode","changeFilterHandler","filterItem","changeCategoryHandle","templateListName","getTemplateList","loading","userList","latitude","longitude","errors","items","filter_paitent_id","custom_search","filter_assign_trial_category","categoryList","templateList","deepProfileTemplateList","practiceCategoryList","trialSubCategoryId","assignTrialInfo","viewInfoData","handleEditPaitent","bind","submitHandler","handleDeletePaitent","filterPaitentsList","resetSearchFilter","setLatitudeLongitude","handleInputChange","handleInputKeyDown","handleRemoveItem","addTrialInfoToPatient","removeAssignTrial","latLng","postal_code","paitentQuery","undefined","statusTxt","getStatusVal","getAPIWithAccessToken","then","res","toast","message","profileList","catch","err","response","localStorage","clear","history","categoryId","setTemplateList","hideSubcat","consent_template_id","deep_profile_template_id","preventDefault","validateForm","formInputField","assignInfo","subCategoryId","formData","consent_category_id","deep_profile_category_id","paitentInfo","putAPIWithAccessToken","success","postAPIWithAccessToken","pattern","RegExp","trim","test","currentObj","setTimeout","deleteAPIWithAccessToken","filter_doctor_id","evt","input","keyCode","slice","index","subCategoryInfo","selectedInfo","splice","loaderElement","Loader","processingBtnText","Row","Col","lg","Card","CardHeader","Button","type","md","FormGroup","Label","htmlFor","Input","placeholder","id","onChange","categoryItem","SetCategoryDropDownItem","key","Modal","isOpen","style","marginRight","Form","onSubmit","noValidate","ModalBody","invalid","required","selectedCategory","templateItem","SetTemplateDropDownItem","subCategoryName","assignTrialDetails","marginBottom","ModalFooter","getStatus","consent_category_name","consent_template_name","deep_profile_category_name","deep_profile_template_name","templateDetail","templateId","templateName"],"mappings":"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","file":"static/js/49.06b542ef.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport  { Link } from 'react-router-dom';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport commonService from '../../../core/services/commonService';\r\nclass UsersData extends Component {\r\n  \r\n constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: [],\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  /* Edit Paitent Info */\r\n  editPaitentItem(rowIndex){    \r\n    this.props.editPaitentAction(rowIndex);\r\n  }\r\n\r\n  deletePaitentItem(rowIndex){    \r\n    this.props.deletePaitentAction(rowIndex);\r\n  }\r\n\r\n  render() {\r\n    \r\n    let rowsItem = [];    \r\n    for(const [i, orgnization] of this.props.data.entries()){\r\n      console.log(i);\r\n      let orgInfo = {\r\n       \r\n        paitentName: `${orgnization.firstName} ${orgnization.lastName}`,\r\n        email: orgnization.email,\r\n        phoneNumber: orgnization.phoneNumber || \" \",\r\n        address: orgnization.address || \" \",\r\n        city: orgnization.city || \" \",      \r\n        state: orgnization.state || \" \",\r\n        country: orgnization.country || \" \",\r\n        skype_id: orgnization.skype_id || \" \",\r\n        status: commonService.getUserStatus(orgnization.status), //orgnization.status ? \"Active\" : \"Inactive\",   \r\n        action: \"\",\r\n        authId: orgnization.authId,\r\n        profileId: orgnization.profileId,\r\n        assign_trial_category: orgnization.userAssignPracticeInfo.length > 0 ? orgnization.userAssignPracticeInfo.map(item => item.categoryInfo.categoryName).join(','):  \" \",\r\n\r\n      }      \r\n      rowsItem.push(orgInfo);\r\n    }      \r\n    const columns = [      \r\n      {\r\n        label: 'Patient Name',\r\n        name: 'paitentName',\r\n      },\r\n      \r\n      {\r\n        label: 'Email',\r\n        name: 'email',\r\n      },\r\n      {\r\n        label: 'Phone Number',\r\n        name: 'phoneNumber',\r\n      },\r\n      {\r\n        label: 'Skype ID',\r\n        name: 'skype_id',\r\n      },\r\n       {\r\n        label: 'Address',\r\n        name: 'address',\r\n      },\r\n      {\r\n        label: 'Assign Trial Category',\r\n        name: 'assign_trial_category',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: true,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n            let profileId = this.props.data[i].profileId;\r\n            return (\r\n             <p><button title=\"Edit Patient\" className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n          this.editPaitentItem(i)}><i className=\"fa fa-eye\"></i> </button>\r\n          <Link title=\"View Patient Details\" className=\"btn-view\" to={`/admin/users/${profileId}`}><i className=\"fa fa-list\"></i> </Link>\r\n          \r\n          <button title=\"Delete Patient\" className=\"btn-delete\" color=\"warning\" disabled={this.state.buttonProcessing} onClick={() => {if( window.confirm('Are you sure you wish to delete this patient?'))\r\n          this.deletePaitentItem(i)}}><i className=\"fa fa-trash\"></i></button></p>\r\n            );\r\n          },\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: false,viewColumns: false,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: false,\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Processing........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    \r\n    return (\r\n      <MUIDataTable\r\n        \r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default UsersData;","import React, { Component } from 'react';\r\nimport { Card, CardHeader, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalBody, ModalFooter} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport  { Link } from 'react-router-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\n//import AutoCompletePlaces from '../../../core/google-map/AutoCompletePlaces';\r\nimport Loader from '../../Loader/Loader';\r\nimport UsersData from './UsersData';\r\nimport './Users.css'\r\n\r\nclass Users extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      userList: [],\r\n      modal: false, \r\n      rowIndex: -1,\r\n      formProccessing: false,\r\n      formField: {paitent_name: '', email: '', first_name: '', last_name: '', skype_id: '', latitude: '', longitude: '',  phoneNumber: '', address: '', city: '', state: '', country: '', postalCode: '', role: '', status: '' },\r\n      errors: {paitent_name: '', email: '', contact_person: '', role: '', address: '', error: ''},\r\n      formValid: true,\r\n      items: [],\r\n      filterItem: { filter_paitent_id: '', country: '', state: '', custom_search: '', filter_assign_trial_category: ''},\r\n      categoryList: [],\r\n      templateList: [],\r\n      deepProfileTemplateList: [],\r\n      practiceCategoryList: [],\r\n      trialCategoryId: \"\",\r\n      trialSubCategoryId: \"\",\r\n      subPracticeCategoryList: [],\r\n      assignTrialInfo: [],\r\n      editMode: true,\r\n      viewInfoData: {}\r\n    } \r\n\r\n    this.handleEditPaitent = this.handleEditPaitent.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleDeletePaitent = this.handleDeletePaitent.bind(this);\r\n    this.filterPaitentsList = this.filterPaitentsList.bind(this);\r\n    this.resetSearchFilter = this.resetSearchFilter.bind(this);\r\n    this.setLatitudeLongitude = this.setLatitudeLongitude.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleInputKeyDown = this.handleInputKeyDown.bind(this);\r\n    this.handleRemoveItem = this.handleRemoveItem.bind(this);\r\n    this.subPracticeCategoryList = this.subPracticeCategoryList.bind(this);\r\n    this.addTrialInfoToPatient = this.addTrialInfoToPatient.bind(this);\r\n    this.removeAssignTrial = this.removeAssignTrial.bind(this);\r\n  }\r\n  componentDidMount() { \r\n    this.userList();\r\n    this.categoryList();\r\n    this.practiceCategoryList();\r\n  }\r\n  setLatitudeLongitude(address, latLng, city = \"\", state = \"\", country = \"\", postal_code = \"\"){\r\n    let formField = this.state.formField;\r\n    formField.state = state;\r\n    formField.latitude = latLng.latitude;\r\n    formField.longitude = latLng.longitude;\r\n    formField.country = country;formField.city = city;formField.postalCode = postal_code;\r\n    formField.address = address\r\n    this.setState({ formField: formField });\r\n  }\r\n\r\n  /*User List API*/\r\n  userList(filterItem = {}) {\r\n    let paitentQuery = \"\";\r\n    \r\n    if(filterItem.country !== undefined && filterItem.country !== \"\" ) \r\n      paitentQuery += (paitentQuery !==\"\" ) ? \"&location=\"+filterItem.country: \"?location=\"+filterItem.country;\r\n    if(filterItem.custom_search !== undefined && filterItem.custom_search !== \"\" ) \r\n      paitentQuery += (paitentQuery !==\"\" ) ? \"&emailOrName=\"+filterItem.custom_search: \"?emailOrName=\"+filterItem.custom_search;\r\n    if(filterItem.filter_assign_trial_category !== undefined && filterItem.filter_assign_trial_category !== \"\" ) \r\n      paitentQuery += (paitentQuery !==\"\" ) ? \"&practiceCategory=\"+filterItem.filter_assign_trial_category: \"?practiceCategory=\"+filterItem.filter_assign_trial_category;\r\n    if(filterItem.status !== undefined && filterItem.status !== \"\" ) {\r\n      let statusTxt = 1;\r\n      statusTxt = commonService.getStatusVal(filterItem.status);\r\n      paitentQuery += (paitentQuery !==\"\" ) ? \"&status=\"+statusTxt: \"?status=\"+statusTxt;\r\n    }\r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken(`profile/list`+paitentQuery)\r\n        .then( res => {\r\n          console.log(res);\r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( {  loading: false } );\r\n            toast.error(res.data.message);    \r\n            return;\r\n          }   \r\n          \r\n          this.setState({loading:false, userList: res.data.data.profileList});     \r\n         \r\n        } )\r\n        .catch( err => {   \r\n               \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message); \r\n          }  \r\n        } )\r\n    } )\r\n  }\r\n\r\n  categoryList() {   \r\n   \r\n    commonService.getAPIWithAccessToken('template/category')\r\n      .then( res => {\r\n        console.log(res);\r\n         \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( {  loading: false } );\r\n          toast.error(res.data.message);    \r\n          return;\r\n        }   \r\n\r\n        this.setState({categoryList: res.data.data});     \r\n       \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else           \r\n          toast.error(err.message);    \r\n        \r\n      } )\r\n    \r\n  }\r\n\r\n  practiceCategoryList() {   \r\n   \r\n    commonService.getAPIWithAccessToken('category')\r\n      .then( res => {\r\n        console.log(res);\r\n         \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( {  loading: false } );\r\n          toast.error(res.data.message);    \r\n          return;\r\n        }   \r\n\r\n        this.setState({practiceCategoryList: res.data.data});     \r\n       \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else           \r\n          toast.error(err.message);    \r\n        \r\n      } )\r\n    \r\n  }\r\n\r\n  subPracticeCategoryList(categoryId) {\r\n    if(categoryId === \"\") {\r\n      this.setState({subPracticeCategoryList: [], trialSubCategoryId: \"\"});\r\n      return;\r\n    }\r\n    this.setState({loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('category/'+categoryId)\r\n      .then( res => {\r\n        console.log(res);\r\n         \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( {  loading: false } );\r\n          toast.error(res.data.message);    \r\n          return;\r\n        }   \r\n\r\n        this.setState({subPracticeCategoryList: res.data.data, trialSubCategoryId: \"\", loading: false});     \r\n       \r\n      } )\r\n      .catch( err => {   \r\n        this.setState({loading: false});      \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else           \r\n          toast.error(err.message);    \r\n        \r\n      } )\r\n    });\r\n\r\n  }\r\n\r\n  /*Get Template List*/\r\n  getTemplateList(categoryId, setTemplateList = \"templateList\", hideSubcat = true){\r\n    \r\n    if(categoryId === \"\") {  \r\n      const formField = this.state.formField;    \r\n      formField.consent_template_id = '';\r\n      this.setState({ formField: formField, templateList: [] });\r\n      return;\r\n    }\r\n    this.setState( { loading: true}, () => { \r\n      //let organizationIdQuery = \"\";\r\n      commonService.getAPIWithAccessToken(\"template?categoryId=\"+categoryId)\r\n      .then( res => {\r\n        console.log(res);\r\n         const formField = this.state.formField;\r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( {  loading: false } );\r\n          toast.error(res.data.message);    \r\n          return;\r\n        }   \r\n        if(hideSubcat){\r\n          if(setTemplateList === \"templateList\")\r\n            formField.consent_template_id = '';\r\n          else\r\n            formField.deep_profile_template_id = '';\r\n        }\r\n        this.setState({[setTemplateList]: res.data.data, formField: formField, loading: false});     \r\n        \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else { \r\n          this.setState( {  loading: false } );        \r\n          toast.error(err.message); \r\n\r\n        }\r\n      } )\r\n    })\r\n  }\r\n\r\n\r\n  /* Submit Form Handler*/\r\n  submitHandler (event) {\r\n    event.preventDefault();\r\n    if(this.state.rowIndex > -1){\r\n      if(!window.confirm(\"Are you sure to update?\"))\r\n        return false;\r\n    }\r\n    event.target.className += \" was-validated\";\r\n    \r\n    if(this.validateForm()){\r\n      return false;\r\n    }\r\n    \r\n    this.setState( { formProccessing: true}, () => {\r\n      const formInputField = this.state.formField;\r\n      let userAssignPracticeInfo = [];\r\n      for(let assignInfo of this.state.assignTrialInfo){\r\n        userAssignPracticeInfo.push({categoryId: assignInfo.categoryId, subCategoryId: assignInfo.subCategoryId});\r\n      }\r\n      const formData = {\r\n        \"email\": formInputField.email,\r\n        \"firstName\": formInputField.first_name,\r\n        \"lastName\": formInputField.last_name, \r\n        \"phoneNumber\": formInputField.phoneNumber, \r\n        \"address\": formInputField.address, \r\n        \"roleName\": formInputField.role, \r\n        \"city\": formInputField.city, \r\n        \"state\": formInputField.state, \r\n        \"latitude\": formInputField.latitude,\r\n        \"longitude\": formInputField.longitude, \r\n        \"country\": formInputField.country, \r\n        \"postalCode\": formInputField.postalCode,\r\n        \"skype_id\": formInputField.skype_id,\r\n        \"accept_trial\": this.state.items.join(','),\r\n        \"consent_category_id\": formInputField.consent_category_id,\r\n        \"consent_template_id\": formInputField.consent_template_id,\r\n        \"deep_profile_category_id\": formInputField.deep_profile_category_id,\r\n        \"deep_profile_template_id\": formInputField.deep_profile_template_id,\r\n        \"status\": commonService.getStatusVal(formInputField.status),\r\n        \"userAssignPracticeInfo\": userAssignPracticeInfo\r\n      };\r\n\r\n\r\n      \r\n      const rowIndex = this.state.rowIndex;\r\n      if(rowIndex > -1) {\r\n        const paitentInfo = this.state.userList[rowIndex];\r\n        commonService.putAPIWithAccessToken('profile/'+paitentInfo.profileId, formData)\r\n        .then( res => {\r\n          \r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n           \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          \r\n          this.setState({ modal: false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.userList();\r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n        } )\r\n      }\r\n      else{\r\n        commonService.postAPIWithAccessToken('profile', formData)\r\n        .then( res => {\r\n          \r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) { \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          \r\n          this.setState({ modal: false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.userList();\r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n        } )\r\n      }\r\n    } );\r\n    \r\n  };\r\n  /* Input Field On changes*/\r\n  changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField });\r\n  };\r\n\r\n  changeTrialHandler = event => {\r\n    const value = event.target.value;\r\n    this.setState({trialCategoryId: value});\r\n    this.subPracticeCategoryList(value);\r\n  }\r\n  \r\n  \r\n  /* Validate Form */\r\n  validateForm() {\r\n    let formValid = false;\r\n    let formField = this.state.formField; \r\n    let errors = {};\r\n    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n    if(formField.first_name === undefined || formField.first_name.trim() === \"\"){\r\n      formValid = true;\r\n      errors['firstName'] = \"Full name field required!\";\r\n    }\r\n    if(formField.email === undefined || formField.email.trim() === \"\"){\r\n      formValid = true;\r\n      errors['email'] = \"Email field required!\";\r\n    }\r\n    else if(!(pattern.test(formField.email))){\r\n      formValid = true;\r\n      errors['email'] = \"Invalid email format\";\r\n    }\r\n    if(formField.consent_category_id === undefined || formField.consent_category_id.trim() === \"\"){\r\n      formValid = true;\r\n      errors['consent_category_id'] = \"Please select consent category!\";\r\n    }\r\n    if(formField.consent_template_id === undefined || formField.consent_template_id.trim() === \"\"){\r\n      formValid = true;\r\n      errors['consent_template_id'] = \"Please select consent template!\";\r\n    }\r\n    if(formField.deep_profile_category_id === undefined || formField.deep_profile_category_id.trim() === \"\"){\r\n      formValid = true;\r\n      errors['deep_profile_category_id'] = \"Please select medical history category!\";\r\n    }\r\n    if(formField.deep_profile_template_id === undefined || formField.deep_profile_template_id.trim() === \"\"){\r\n      formValid = true;\r\n      errors['deep_profile_template_id'] = \"Please select medical history template!\";\r\n    }\r\n    if(formField.status === undefined || formField.status.trim() === \"\"){\r\n      formValid = true;\r\n      errors['status'] = \"Status field required!\";\r\n    }\r\n    this.setState({errors:  errors});\r\n    return formValid;\r\n    \r\n  }\r\n  /* Set Error Class*/\r\n  errorClass(error) {\r\n    return(error.length === 0 ? '' : 'has-error');\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      rowIndex: -1,\r\n      formValid: false,\r\n      formProccessing : false,\r\n      formField: {paitent_name: '', email: '', first_name: '', last_name: '', phoneNumber: '', address: '', city: '', state: '', country: '', postalCode: '', role: '' },\r\n      formErrors: {paitent_name: '', email: '', contact_person: '', role: '', address: '', error: ''},\r\n      editMode: true\r\n    });\r\n  }\r\n  /* Edit paitent*/\r\n  handleEditPaitent(rowIndex){\r\n      const paitentInfo = this.state.userList[rowIndex];\r\n      let status = commonService.getUserStatus(paitentInfo.status);\r\n      \r\n      let formField = {\r\n        \r\n        email: paitentInfo.email, \r\n        first_name: paitentInfo.firstName, \r\n        last_name: paitentInfo.lastName, \r\n        phoneNumber: paitentInfo.phoneNumber, \r\n        address: paitentInfo.address, \r\n        city: paitentInfo.city, \r\n        state: paitentInfo.state, \r\n        country: paitentInfo.country, \r\n        postalCode: paitentInfo.postalCode,\r\n        skype_id: paitentInfo.skype_id || \"\",\r\n        consent_template_id: paitentInfo.consent_template_id || \"\",\r\n        consent_category_id: paitentInfo.consent_category_id || \"\",\r\n        deep_profile_category_id: paitentInfo.deep_profile_category_id || \"\",\r\n        deep_profile_template_id: paitentInfo.deep_profile_template_id || \"\",\r\n        status: status };\r\n      \r\n      let assignTrialInfo = paitentInfo.userAssignPracticeInfo || [];\r\n      this.setState({rowIndex: rowIndex, editMode: false, viewInfoData: paitentInfo, formField: formField, modal: true, formValid: true, formProccessing: false, assignTrialInfo: assignTrialInfo});\r\n      let currentObj = this;\r\n      setTimeout(function(){\r\n        currentObj.getTemplateList(paitentInfo.deep_profile_category_id, \"deepProfileTemplateList\", false);\r\n        currentObj.getTemplateList(paitentInfo.consent_category_id, \"templateList\", false);\r\n      }, 300);\r\n      \r\n\r\n  }\r\n  /* Delete paitent*/\r\n  handleDeletePaitent(rowIndex){\r\n    const paitentInfo = this.state.userList[rowIndex];\r\n    this.setState( { loading : true}, () => {   \r\n      commonService.deleteAPIWithAccessToken('profile', {profileId: paitentInfo.profileId})\r\n      .then( res => {\r\n        \r\n         \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n         \r\n          this.setState( { loading : false} );\r\n          toast.error(res.data.message);\r\n          return;\r\n        } \r\n        \r\n        this.setState({ modal: false, loading : false});\r\n        toast.success(res.data.message);\r\n        this.resetSearchFilter();\r\n       \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else\r\n          this.setState( { loading : false } );\r\n          toast.error(err.message);\r\n      } )\r\n    } );\r\n   \r\n    \r\n  }\r\n  filterPaitentsList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.userList(filterItem);\r\n  }\r\n\r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n  resetSearchFilter() {\r\n    this.setState({filterItem: { filter_doctor_id: '', country: '', state: '', custom_search: '', filter_assign_trial_category: ''}});\r\n    this.userList();\r\n  }\r\n\r\n\r\n  handleInputChange(evt) {\r\n    this.setState({ input: evt.target.value });\r\n  }\r\n\r\n  handleInputKeyDown(evt) {\r\n\r\n    if ( evt.keyCode === 13 ) {\r\n      const {value} = evt.target;\r\n      evt.preventDefault();\r\n      this.setState(state => ({\r\n        items: [...state.items, value],\r\n        input: ''\r\n      }));\r\n    }\r\n\r\n    if ( this.state.items.length && evt.keyCode === 8 && !this.state.input.length ) {\r\n\r\n      this.setState(state => ({\r\n        items: state.items.slice(0, state.items.length - 1)\r\n      }));\r\n    }\r\n  }\r\n\r\n  handleRemoveItem(index) {\r\n    return () => {\r\n      this.setState(state => ({\r\n        items: state.items.filter((item, i) => i !== index)\r\n      }));\r\n    }\r\n  }\r\n\r\n  changeCategoryHandle = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField });\r\n    let templateListName = \"templateList\";\r\n    if(name !== \"consent_category_id\")\r\n      templateListName = \"deepProfileTemplateList\";\r\n    this.getTemplateList(value, templateListName, value);\r\n  }\r\n\r\n  addTrialInfoToPatient (event) {\r\n    event.preventDefault();\r\n    if(this.state.trialCategoryId !== \"\" && this.state.trialSubCategoryId !== \"\"){\r\n      let assignTrialInfo = this.state.assignTrialInfo;\r\n      let trialCategoryId = this.state.trialCategoryId;\r\n      let trialSubCategoryId = this.state.trialSubCategoryId;\r\n      let checkAlreadyAssign = assignTrialInfo.filter(function(item) { return item.categoryId === trialCategoryId && item.subCategoryId === trialSubCategoryId;});\r\n      if( checkAlreadyAssign.length === 0 ) {\r\n        \r\n        let categoryInfo = this.state.practiceCategoryList.filter(function(item) { return item.categoryId === trialCategoryId;});\r\n        let subCategoryInfo = this.state.subPracticeCategoryList.filter(function(item) { return item.subCategoryId === trialSubCategoryId;});\r\n        if(categoryInfo.length > 0  && subCategoryInfo.length > 0){\r\n          let selectedInfo = {categoryId: trialCategoryId, subCategoryId: trialSubCategoryId, categoryInfo: categoryInfo[0], subCategoryInfo: subCategoryInfo[0]};\r\n          assignTrialInfo.push(selectedInfo);\r\n          this.setState({assignTrialInfo: assignTrialInfo, trialSubCategoryId: \"\"});\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  removeAssignTrial(index, event) {\r\n    event.preventDefault();\r\n    let assignTrialInfo = this.state.assignTrialInfo;\r\n    assignTrialInfo.splice(index, 1);\r\n    this.setState({assignTrialInfo: assignTrialInfo});\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { userList, loading, modal, formProccessing, errors, categoryList, templateList, deepProfileTemplateList, practiceCategoryList, subPracticeCategoryList } = this.state;     \r\n    let loaderElement = '';\r\n    \r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n    const processingBtnText = <>Save <i className=\"fa fa-spinner\"></i></>;\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          \r\n          {loaderElement}\r\n          <Col lg={12}>\r\n            <Card className=\"oep-card\">\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>Patient List</strong> \r\n                <Button color=\"\" className=\"categoryAdd-1\" type=\"button\" onClick={() => {this.props.history.push('/admin/users/new')}}> New Account Approval</Button>\r\n                <Button color=\"\" className=\"categoryAdd\" type=\"button\" onClick={this.toggle}><i className=\"fa fa-plus\"></i> Add Patient</Button>\r\n              </CardHeader>             \r\n                <Row>\r\n                  <Col md={12}>\r\n                    <div className=\"search-filter\">\r\n                    <Row>                      \r\n                      <Col md={\"3\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filter_doctor_id\">Search By Email/ Name</Label>            \r\n                          <Input type=\"text\" placeholder=\"Search By Email/Name\" id=\"custom_search\" name=\"custom_search\" value={this.state.filterItem.custom_search} onChange={this.changeFilterHandler} />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"3\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filter_assign_trial_category\">Search By Assign Trial Category</Label>            \r\n                          <Input type=\"select\" placeholder=\"Search By Assign Trial Category\" id=\"filter_assign_trial_category\" name=\"filter_assign_trial_category\" value={this.state.filterItem.filter_assign_trial_category} onChange={this.changeFilterHandler} >\r\n                            <option value=\"\">Select</option>\r\n                            {practiceCategoryList.map((categoryItem, index) =>\r\n                              <SetCategoryDropDownItem key={index} categoryItem={categoryItem}  />\r\n                            )}\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"3\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filter_doctor_id\">Search By Status</Label>            \r\n                          <Input type=\"select\" placeholder=\"Search By Status\" id=\"status\" name=\"status\" value={this.state.filterItem.status} onChange={this.changeFilterHandler}>\r\n                              <option value = \"\">Select</option>\r\n                              <option value=\"Active\">Active</option>\r\n                              <option value=\"Inactive\">Inactive</option>\r\n                              <option value=\"Pending\">Pending</option>\r\n                              <option value=\"Block\">Block</option>\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"3\"}>\r\n                        <FormGroup className=\"filter-button-section\"> \r\n                          <Button className=\"search-btn\" type=\"button\" onClick={this.filterPaitentsList}>Search</Button> \r\n                          <Button className=\"search-btn\" id=\"resetButton\" type=\"button\" onClick={this.resetSearchFilter}>Reset</Button> \r\n                        </FormGroup>             \r\n                      </Col>\r\n                    </Row>\r\n                     </div>  \r\n                  </Col>\r\n\r\n                  <Col lg={12}>\r\n                    <UsersData data={userList} editPaitentAction={this.handleEditPaitent} deletePaitentAction={this.handleDeletePaitent} dataTableLoadingStatus = {this.state.loading} />\r\n                  </Col>  \r\n                </Row>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Modal isOpen={modal} toggle={this.toggle} className=\"full-width-modal-section organization-modal\">\r\n          <div className=\"popup-Heading\">\r\n            <Row>\r\n             <Col md={\"6\"}>  \r\n                Add New Patient\r\n             </Col>\r\n             <Col md={\"6\"} >  \r\n               <label className=\"pull-right\" onClick={this.toggle}>\r\n                  Close\r\n                </label>\r\n                 {!this.state.editMode && this.state.rowIndex > -1 && <label className=\"view-icon pull-right\" style={{marginRight:'10px'}} onClick = {() => {this.setState({editMode: true})}}><i className=\"fa fa-pencil\"></i></label>}\r\n                {this.state.editMode && this.state.rowIndex > -1 && <label className=\"view-icon pull-right\" style={{marginRight:'10px'}} onClick = {() => {this.setState({editMode: false})}}><i className=\"fa fa-eye\"></i></label>}\r\n                \r\n             </Col>\r\n            </Row>\r\n          </div>\r\n          {this.state.editMode && <Form onSubmit={this.submitHandler} noValidate>\r\n            <ModalBody>\r\n              <Row>\r\n                <Col md={\"4\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"first_name\">Full Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"Full Name *\" invalid={errors['firstName'] !== undefined && errors['firstName'] !== \"\"} id=\"first_name\" name=\"first_name\" value={this.state.formField.first_name} onChange={this.changeHandler} required />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['firstName']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n               { /*<Col md={\"4\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"last_name\">Last Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"Last Name\" id=\"last_name\" name=\"last_name\" value={this.state.formField.last_name} onChange={this.changeHandler}  />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['lastName']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col> */}\r\n                <Col md={\"4\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"email\">Email</Label>            \r\n                    <Input type=\"text\" placeholder=\"Email *\" invalid={errors['email'] !== undefined && errors['email'] !== \"\"} id=\"email\" name=\"email\" value={this.state.formField.email} onChange={this.changeHandler} required />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['email']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                \r\n                <Col md={\"4\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"phoneNumber\">Contact Number</Label>            \r\n                    <Input type=\"text\" placeholder=\"Contact Number \" id=\"phoneNumber\" name=\"phoneNumber\" value={this.state.formField.phoneNumber} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"4\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"skype_id\">Skype ID</Label>            \r\n                    <Input type=\"text\" placeholder=\"Skype ID \" id=\"skype_id\" name=\"skype_id\" value={this.state.formField.skype_id} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"8\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"address\">Address</Label>            \r\n                    <Input type=\"text\" placeholder=\"Address\" id=\"address\" name=\"address\" value={this.state.formField.address} onChange={this.changeHandler}  />\r\n                    {/*         \r\n                    <AutoCompletePlaces setLatitudeLongitude={this.setLatitudeLongitude} address = {this.state.formField.address} />  */}\r\n                  </FormGroup>\r\n                </Col>                \r\n                \r\n                <Col md={\"4\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"postalCode\">Postal Code</Label>            \r\n                    <Input type=\"text\" placeholder=\"Postal Code\" id=\"postalCode\" name=\"postalCode\" value={this.state.formField.postalCode} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                {/*<Col md = {\"4\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"accept_trial\">Accept Trial</Label> \r\n                  \r\n                    <ul className=\"suggest-container\">\r\n                      {this.state.items.map((item, i) => \r\n                        <li key={i} className= \"suggest-items\" onClick={this.handleRemoveItem(i)}>\r\n                          {item}\r\n                          <span>(x)</span>\r\n                        </li>\r\n                      )}\r\n                      <input\r\n                        className=\"suggest-input\"\r\n                        value={this.state.input}\r\n                        onChange={this.handleInputChange}\r\n                        onKeyDown={this.handleInputKeyDown} />\r\n                    </ul>\r\n                  </FormGroup>\r\n                </Col>*/}\r\n                <Col lg={\"4\"}>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"template_status\">Status</Label>            \r\n                      <Input type=\"select\" placeholder=\"Status *\" id=\"status\" name=\"status\" value={this.state.formField.status} invalid={errors['status'] !== undefined && errors['status'] !== \"\"} onChange={this.changeHandler} required >\r\n                        <option value=\"\">Select Status</option>\r\n                        <option value=\"Active\">Active</option>\r\n                        <option value=\"Inactive\">Inactive</option>\r\n                        <option value=\"Pending\">Pending</option>\r\n                        <option value=\"Block\">Block</option>\r\n                      </Input>\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors['status']}\r\n                      </div>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col lg={6}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"consent_category_id\">Consent Category <span className=\"mandatory\">*</span></Label>            \r\n                    <Input type=\"select\" placeholder=\"category Name *\" id=\"consent_category_id\" invalid={errors['consent_category_id'] !== undefined && errors['consent_category_id'] !== \"\"} name=\"consent_category_id\" value={this.state.formField.consent_category_id} onChange={this.changeCategoryHandle}  required>\r\n                      <option value=\"\">Select</option>\r\n                      {categoryList.map((categoryItem, index) =>\r\n                        <SetCategoryDropDownItem key={index} categoryItem={categoryItem} selectedCategory={this.state.formField.consent_category_id} />\r\n                      )}\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors['consent_category_id']}\r\n                      </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col lg={6}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"consent_template_id\">Select Consent Form <span className=\"mandatory\">*</span></Label>            \r\n                    <Input type=\"select\" placeholder=\"Subcategory Name *\" id=\"consent_template_id\" invalid={errors['consent_template_id'] !== undefined && errors['consent_template_id'] !== \"\"} name=\"consent_template_id\" value={this.state.formField.consent_template_id} onChange={this.changeHandler}  required>\r\n                      <option value=\"\">Select</option>\r\n                      {templateList.map((templateItem, index) =>\r\n                        <SetTemplateDropDownItem key={index} templateItem={templateItem} selectedCategory={this.state.formField.consent_template_id} />\r\n                      )}\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors['consent_template_id']}\r\n                    </div>\r\n                    {this.state.formField.consent_template_id ? <div className=\"previewTemplateIcon\"><Link to={`/common/template/${this.state.formField.consent_template_id}`} target=\"_blank\" className=\"Preview-btn\">Preview Template </Link></div>  : \"\"}\r\n                \r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg={6}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"deep_profile_category_id\">Select Medical History Category <span className=\"mandatory\">*</span></Label>            \r\n                    <Input type=\"select\" placeholder=\"category Name *\" id=\"deep_profile_category_id\" invalid={errors['deep_profile_category_id'] !== undefined && errors['deep_profile_category_id'] !== \"\"} name=\"deep_profile_category_id\" value={this.state.formField.deep_profile_category_id} onChange={this.changeCategoryHandle}  required>\r\n                      <option value=\"\">Select</option>\r\n                      {categoryList.map((categoryItem, index) =>\r\n                        <SetCategoryDropDownItem key={index} categoryItem={categoryItem} selectedCategory={this.state.formField.deep_profile_category_id} />\r\n                      )}\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors['deep_profile_category_id']}\r\n                      </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col lg={6}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"deep_profile_template_id\">Select Medical History Template <span className=\"mandatory\">*</span></Label>            \r\n                    <Input type=\"select\" placeholder=\"\" id=\"deep_profile_template_id\" invalid={errors['deep_profile_template_id'] !== undefined && errors['deep_profile_template_id'] !== \"\"} name=\"deep_profile_template_id\" value={this.state.formField.deep_profile_template_id} onChange={this.changeHandler}  required>\r\n                      <option value=\"\">Select</option>\r\n                      {deepProfileTemplateList.map((templateItem, index) =>\r\n                        <SetTemplateDropDownItem key={index} templateItem={templateItem} selectedCategory={this.state.formField.deep_profile_template_id} />\r\n                      )}\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors['deep_profile_template_id']}\r\n                    </div>\r\n                    {this.state.formField.deep_profile_template_id ? <div className=\"previewTemplateIcon\"><Link to={`/common/template/${this.state.formField.deep_profile_template_id}`} target=\"_blank\" className=\"Preview-btn\">Preview Template </Link></div> : \"\"}\r\n                \r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg={5}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"assign_trail_category\">Assign Trial Category <span className=\"mandatory\">*</span></Label>            \r\n                    <Input type=\"select\" placeholder=\"\" id=\"assign_trail_category\" invalid={errors['assign_trail_category'] !== undefined && errors['assign_trail_category'] !== \"\"} name=\"assign_trail_category\" value={this.state.trialCategoryId} onChange={this.changeTrialHandler}  >\r\n                      <option value=\"\">Select</option>\r\n                      {practiceCategoryList.map((categoryItem, index) =>\r\n                        <SetCategoryDropDownItem key={index} categoryItem={categoryItem}  />\r\n                      )}\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors['assign_trail_category']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg={5}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"assign_trial_subcategory\">Assign Trial Subcategory<span className=\"mandatory\">*</span></Label>            \r\n                    <Input type=\"select\" placeholder=\"\" id=\"assign_trial_subcategory\" invalid={errors['assign_trial_subcategory'] !== undefined && errors['assign_trial_subcategory'] !== \"\"} name=\"assign_trial_subcategory\" value={this.state.trialSubCategoryId} onChange={(event) => {this.setState({trialSubCategoryId: event.target.value})}}  >\r\n                      <option value=\"\">Select</option>\r\n                      {subPracticeCategoryList.map((categoryItem, index) =>\r\n                        <SetCategoryDropDownItem key={index} categoryItem={{categoryId: categoryItem.subCategoryId, categoryName: categoryItem.subCategoryName}}  />\r\n                      )}\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors['assign_trial_subcategory']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"2\"}>  \r\n                        <div className=\"btn profie-btn addBtn-1\" disabled = {this.state.trialCategoryId !== \"\" && this.state.trialSubCategoryId ? true : false} onClick = {(event) => {this.addTrialInfoToPatient(event);}}>Add</div></Col>\r\n                {\r\n                  this.state.assignTrialInfo.length > 0 && <Col md = {\"12\"}>\r\n                    <div className=\"addDrs\">\r\n                      <Row>\r\n                        {\r\n                          this.state.assignTrialInfo.map((assignTrialDetails, index) =>\r\n                            <Col md= {6} key ={index}>\r\n                              <div className=\"select-user-info\" style={{marginBottom:'5px'}}>\r\n                                {`${assignTrialDetails.categoryInfo.categoryName} | ${assignTrialDetails.subCategoryInfo.subCategoryName}`}\r\n                                <button className=\"remove-selected-user-info\" onClick = {(event) => {this.removeAssignTrial(index, event)}}><i className=\"fa fa-times\"></i></button>\r\n                              </div>\r\n                            </Col> \r\n                          )\r\n                        }\r\n                      </Row>\r\n                    </div>\r\n                  </Col>\r\n                }     \r\n              </Row>           \r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <div className=\"btn-group-popup\">\r\n                <div className=\"btn btn-back-popup\" color=\"primary\" onClick={this.toggle}>Back</div>\r\n                <button className=\"btn btn-save-popup\" color=\"secondary\" disabled={formProccessing} type=\"submit\">{formProccessing ? processingBtnText : 'Save' }</button>\r\n              </div>\r\n            </ModalFooter>\r\n          </Form>}\r\n          {!this.state.editMode && <div className=\"viewInfo\">\r\n            <ModalBody>\r\n              <Row>\r\n                <Col md={\"4\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"first_name\">Full Name</Label>            \r\n                    <p>{this.state.viewInfoData.firstName}</p>\r\n                  </FormGroup>\r\n                </Col>\r\n               \r\n                <Col md={\"4\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"email\">Email</Label>            \r\n                    <p>{this.state.viewInfoData.email}</p>\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                \r\n                <Col md={\"4\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"phoneNumber\">Contact Number</Label>\r\n                    <p>{this.state.viewInfoData.phoneNumber}</p>            \r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"4\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"skype_id\">Skype ID</Label> \r\n                    <p>{this.state.viewInfoData.skype_id}</p>           \r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"8\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"address\">Address</Label> \r\n                    <p>{this.state.viewInfoData.address}</p>           \r\n                  </FormGroup>\r\n                </Col>                \r\n                \r\n                <Col md={\"4\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"postalCode\">Postal Code</Label>  \r\n                    <p>{this.state.viewInfoData.postalCode}</p>          \r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col lg={\"4\"}>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"template_status\">Status</Label>            \r\n                      <p>{commonService.getStatus(this.state.viewInfoData.status)}</p>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col lg={6}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"consent_category_id\">Consent Category <span className=\"mandatory\">*</span></Label>            \r\n                    <p>{this.state.viewInfoData.consent_category_name}</p>\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col lg={6}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"consent_template_id\">Select Consent Form <span className=\"mandatory\">*</span></Label>            \r\n                    <p>{this.state.viewInfoData.consent_template_name}</p>\r\n                    {this.state.viewInfoData.consent_template_id ? <div className=\"previewTemplateIcon\"><Link to={`/common/template/${this.state.viewInfoData.consent_template_id}`} target=\"_blank\" className=\"Preview-btn\">Preview Template </Link></div>  : \"\"}\r\n               \r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg={6}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"deep_profile_category_id\">Select Medical History Category <span className=\"mandatory\">*</span></Label>            \r\n                    <p>{this.state.viewInfoData.deep_profile_category_name}</p>\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col lg={6}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"deep_profile_template_id\">Select Medical History Template <span className=\"mandatory\">*</span></Label>            \r\n                    <p>{this.state.viewInfoData.deep_profile_template_name}</p>\r\n                    {this.state.viewInfoData.deep_profile_template_id ? <div className=\"previewTemplateIcon\"><Link to={`/common/template/${this.state.viewInfoData.deep_profile_template_id}`} target=\"_blank\" className=\"Preview-btn\">Preview Template </Link></div>  : \"\"}\r\n                  </FormGroup>\r\n                  \r\n                </Col>\r\n                \r\n                <Col lg={12}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"assign_trial_subcategory\">Assign Trial Category & Subcategory<span className=\"mandatory\">*</span></Label>            \r\n                    \r\n                  </FormGroup>\r\n                </Col>\r\n                {\r\n                  this.state.viewInfoData.userAssignPracticeInfo.length > 0 && <Col md = {\"12\"}>\r\n                    <div className=\"addDrs\">\r\n                      <Row>\r\n                        {\r\n                          this.state.viewInfoData.userAssignPracticeInfo.map((assignTrialDetails, index) =>\r\n                            <Col md= {6} key ={index}>\r\n                              <div className=\"select-user-info\">\r\n                                {`${assignTrialDetails.categoryInfo.categoryName} | ${assignTrialDetails.subCategoryInfo.subCategoryName}`}\r\n                              </div>\r\n                            </Col> \r\n                          )\r\n                        }\r\n                      </Row>\r\n                    </div>\r\n                  </Col>\r\n                }     \r\n              </Row>           \r\n            </ModalBody>\r\n          </div> }\r\n        </Modal>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nfunction SetCategoryDropDownItem (props) {\r\n  const categoryItem = props.categoryItem;\r\n  return (<option value={categoryItem.categoryId} >{categoryItem.categoryName}</option>)\r\n}\r\n\r\nfunction SetTemplateDropDownItem(props){\r\n  const templateDetail = props.templateItem;\r\n  return (<option value={templateDetail.templateId} >{templateDetail.templateName}</option>)\r\n}\r\n\r\nexport default Users;\r\n","import React from 'react';\nimport \"./Loader.css\"\nconst Loader = () => {\n    return (\n        <div className=\"loaderSection\">\n             <div className=\"spinner-border text-primary\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n              </div>\n        </div>\n    );\n}\n\nexport default Loader;"],"sourceRoot":""}