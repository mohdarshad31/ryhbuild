{"version":3,"sources":["views/AdminDashboard/ClinicalTrial/ClinicalTrialDetails.js","views/Loader/Loader.js","../node_modules/reactstrap/es/Col.js"],"names":["ClinicalTrialDetails","props","scrollToTop","window","scrollTo","state","modal","loading","clinicalTrialList","this","getClinicalTrialList","setState","commonService","getAPIWithAccessToken","then","res","undefined","data","status","toast","error","message","catch","err","response","localStorage","clear","history","push","loaderElement","className","map","clinicalTrialInfo","index","key","md","clinicalTrial","selectedDoctorDetails","doctorInfo","doctorIndex","firstName","lastName","length","selectedPatientDetails","patientInfo","patientIndex","stagesData","stageInfo","stageIndex","parseInt","getDaysDiffernce","startDate","endDate","title","to","clinicalTrialId","Component","Loader","role","stringOrNumberProp","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","tag","xs","sm","lg","xl","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Col","Tag","attributes","colClasses","forEach","i","columnProp","_classNames","colSizeInterfix","colClass","_colClass","classes","createElement"],"mappings":"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","file":"static/js/46.83ad64a5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Col} from 'reactstrap';\r\nimport { toast } from 'react-toastify'\r\nimport  { Link } from 'react-router-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\nimport Loader from '../../Loader/Loader';\r\nimport './ClinicalTrialDetails.css';\r\nclass ClinicalTrialDetails extends Component {\r\n   constructor(props){\r\n      super(props);\r\n      this.state = {\r\n         modal: false, \r\n         loading: false,\r\n         clinicalTrialList: []     \r\n      } \r\n   }\r\n// Fetch the doctor List\r\ncomponentDidMount() { \r\n   this.getClinicalTrialList();\r\n}\r\n\r\ngetClinicalTrialList(){\r\n    \r\n    \r\n    this.setState( { loading: true}, () => { \r\n      //let organizationIdQuery = \"\";\r\n      commonService.getAPIWithAccessToken(\"clinical-trial\")\r\n      .then( res => {\r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( {  loading: false } );\r\n          toast.error(res.data.message);    \r\n          return;\r\n        }   \r\n        \r\n        this.setState({loading: false, clinicalTrialList: res.data.data});     \r\n        \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else { \r\n          this.setState( {  loading: false } );        \r\n          toast.error(err.message); \r\n\r\n        }\r\n      } )\r\n    })\r\n  }\r\nscrollToTop = () => window.scrollTo(0, 0);\r\nrender() {\r\nconst { loading } = this.state;  \r\nlet loaderElement ='';\r\n    \r\n    if(loading)\r\n      loaderElement = <Loader />\r\nreturn (\r\n<div className=\"clinical-trial-info-card\">\r\n   <div className=\"clinical-trial-info\">\r\n         {loaderElement}\r\n         \r\n         {\r\n            this.state.clinicalTrialList.map((clinicalTrialInfo, index) => \r\n               <div className=\"profile-card-details\" key = {index}>\r\n                  <div className=\"container\">\r\n                     <div className=\"row\">\r\n                        <Col md={\"4\"}>\r\n                        <div className=\"details-1\">\r\n                           <div className=\"profile-pic\">\r\n                           </div>\r\n                           <div className=\"details-dr\">\r\n                              <span className=\"profile-1-B\">{clinicalTrialInfo.clinicalTrial}</span>\r\n                              <div className=\"border-R \">\r\n                                 <p className=\"doctors-H-C\">Doctors</p>\r\n                                 <p className=\"font-w\">\r\n                                    {\r\n                                       clinicalTrialInfo.selectedDoctorDetails.map((doctorInfo, doctorIndex) => \r\n                                          <t key = {doctorIndex}>\r\n                                             {doctorInfo.firstName} {doctorInfo.lastName} {clinicalTrialInfo.selectedDoctorDetails.length - 2 === doctorIndex ? ' & ' : doctorIndex !== 0 && clinicalTrialInfo.selectedDoctorDetails.length - 1 !== doctorIndex ? ', ' : ''}\r\n                                          </t>\r\n                                       )\r\n                                    }\r\n                                 </p>\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n                        </Col>\r\n                        <Col md={\"3\"}>\r\n                        <div className=\"border-R-1 \">\r\n                           <p className=\"doctors-H-C\">Patients</p>\r\n                           <p className=\"font-w\">\r\n                              {\r\n                                 clinicalTrialInfo.selectedPatientDetails.map((patientInfo, patientIndex) => \r\n                                    <t key = {patientIndex}>\r\n                                       {patientInfo.firstName} {patientInfo.lastName} {clinicalTrialInfo.selectedPatientDetails.length - 2 === patientIndex ? ' & ' : patientIndex !== 0 && clinicalTrialInfo.selectedPatientDetails.length - 1 !== patientIndex ? ', ' : ''}\r\n                                    </t>\r\n                                 )\r\n                              }\r\n                           </p>\r\n                        </div>\r\n                        </Col>\r\n                        <Col md={\"4\"}>\r\n                        <div className=\"border-R-2\">\r\n                           <p className=\"doctors-H-C\">Visits</p>\r\n                           <p className=\"font-w\">\r\n                              {\r\n                                 clinicalTrialInfo.stagesData.map((stageInfo, stageIndex) => \r\n                                    <t key = {stageIndex}>\r\n                                       Visit {parseInt(stageIndex) + 1} {clinicalTrialInfo.stagesData.length - 2 === stageIndex ? ' & ' : stageIndex !== 0 && clinicalTrialInfo.stagesData.length - 1 !== stageIndex ? ', ' : ''}\r\n                                    </t>\r\n                                 )\r\n                              }\r\n                           </p>\r\n                        </div>\r\n                        </Col>\r\n                     </div>\r\n                  </div>\r\n                  <div className=\"card-footer\">\r\n                     <div className=\"row\">\r\n                        <Col md={\"6\"}>\r\n                           <p> <span>Test visit: </span>  {\r\n                                    clinicalTrialInfo.stagesData.map((stageInfo, stageIndex) => \r\n                                       <t key = {stageIndex}>\r\n                                          {`Visit ${parseInt(stageIndex) + 1} (${commonService.getDaysDiffernce(stageInfo.startDate, stageInfo.endDate)} days)` } {clinicalTrialInfo.stagesData.length - 2 === stageIndex ? ' & ' : stageIndex !== 0 && clinicalTrialInfo.stagesData.length - 1 !== stageIndex ? ', ' : ''}\r\n                                       </t>\r\n                                    )\r\n                                 }\r\n                            </p>\r\n                        </Col>\r\n                        <Col md={\"6\"} className=\"text-right\">\r\n                        <div className=\"btn view-details\"><Link title=\"View Details\" to={`/admin/manage-trial/clinical-trial/${clinicalTrialInfo.clinicalTrialId}`}>View Details</Link></div>\r\n                        </Col>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n\r\n            )\r\n         \r\n         }\r\n      \r\n      \r\n   </div>\r\n</div>\r\n)\r\n}\r\n}\r\nexport default ClinicalTrialDetails;","import React from 'react';\nimport \"./Loader.css\"\nconst Loader = () => {\n    return (\n        <div className=\"loaderSection\">\n             <div className=\"spinner-border text-primary\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n              </div>\n        </div>\n    );\n}\n\nexport default Loader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;"],"sourceRoot":""}