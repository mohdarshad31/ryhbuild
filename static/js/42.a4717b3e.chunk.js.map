{"version":3,"sources":["views/AdminDashboard/Doctors/Payment/PaymentData.js","views/AdminDashboard/Doctors/Payment/PaidPaymentData.js","views/AdminDashboard/Doctors/Payment/PaidPayment.js","views/AdminDashboard/Doctors/Payment/Payment.js","views/Loader/Loader.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["StoreData","props","state","buttonProcessing","rowIndex","dataTableItem","this","editStoreAction","deleteStoreAction","rowsItem","data","entries","i","paymentInfo","console","log","orgInfo","doctorName","patientName","clinicalTrialName","amount","paymentAmount","status","action","push","columns","label","name","options","filter","customBodyRender","value","tableMeta","updateValue","title","className","disabled","onClick","updatePaymentData","search","viewColumns","searchOpen","print","download","responsive","selectableRows","textLabels","body","noMatch","dataTableLoadingStatus","toolTip","columnHeaderTooltip","column","fixedHeaderOptions","xAxis","yAxis","Component","paymentMode","transactionId","remark","PaidPayment","toggleModal","setState","modal","errors","formField","changeFilterHandler","event","target","filterItem","onDismiss","visible","toggle","tab","activeTab","doctorList","userList","clinicalTrialList","paymentList","loading","formProccessing","resetSearchFilter","bind","filterList","patientList","paymentQuery","undefined","patientId","doctorId","clinicalTrialId","commonService","getAPIWithAccessToken","then","res","toast","error","message","catch","err","response","localStorage","clear","propsHistory","history","doctorQuery","country","custom_search","selectedSpecialization","patientQuery","practiceCategory","practiceSubCategory","profileList","Row","Col","md","FormGroup","Label","htmlFor","Input","type","placeholder","id","onChange","map","userInfo","index","authId","key","firstName","lastName","clinicalTrial","Button","lg","Payment","changeHandler","handlePaymentData","submitHandler","preventDefault","validateForm","formInputField","formData","paymentId","putAPIWithAccessToken","success","formValid","trim","loaderElement","Loader","processingBtnText","Nav","tabs","NavItem","NavLink","TabContent","TabPane","tabId","PaymentData","Modal","isOpen","ModalHeader","Form","onSubmit","noValidate","ModalBody","invalid","required","ModalFooter","color","role","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","Array","from","test","_createForOfIteratorHelper","Symbol","iterator","isArray","F","s","length","done","e","_e","f","TypeError","it","normalCompletion","didErr","step","next","_e2","_arrayLikeToArray","arr","len","arr2","_slicedToArray","_arr","_n","_d","_s","_i","unsupportedIterableToArray"],"mappings":"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","file":"static/js/42.a4717b3e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nclass StoreData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  /* Edit Store Info */\r\n  editStoreItem(rowIndex){    \r\n    this.props.editStoreAction(rowIndex);\r\n  }\r\n\r\n  deleteStoreItem(rowIndex){    \r\n    this.props.deleteStoreAction(rowIndex);\r\n  }\r\n\r\n  render() {\r\n    \r\n    let rowsItem = [];\r\n    for(const [i, paymentInfo] of this.props.data.entries()){\r\n      console.log(i);\r\n      let orgInfo = {   \r\n        doctorName: paymentInfo.doctorName, \r\n        patientName: paymentInfo.patientName, \r\n        clinicalTrialName: paymentInfo.clinicalTrialName, \r\n        amount: paymentInfo.paymentAmount, \r\n        status: 'Not Paid',    \r\n        action: \"\",       \r\n      }      \r\n      rowsItem.push(orgInfo);\r\n    }      \r\n    \r\n    const columns = [ \r\n      {\r\n        label: 'Investigator Name',\r\n        name: 'doctorName',\r\n      },     \r\n      {\r\n        label: 'Patient Name',\r\n        name: 'patientName',\r\n      },\r\n      \r\n      {\r\n        label: 'Clinical Trial',\r\n        name: 'clinicalTrialName',\r\n      },\r\n      \r\n      {\r\n        label: 'Amount',\r\n        name: 'amount',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },      \r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: true,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n           \r\n            return (\r\n             <p><button title=\"Update Payment Info\" className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n              this.props.updatePaymentData(i)}><i className=\"fa fa-pencil\"></i> </button>\r\n              </p>\r\n            );\r\n          },\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: false,viewColumns: false,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: false,\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Processing........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        \r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default StoreData;","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nclass StoreData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  /* Edit Store Info */\r\n  editStoreItem(rowIndex){    \r\n    this.props.editStoreAction(rowIndex);\r\n  }\r\n\r\n  deleteStoreItem(rowIndex){    \r\n    this.props.deleteStoreAction(rowIndex);\r\n  }\r\n\r\n  render() {\r\n    \r\n    let rowsItem = [];\r\n    for(const [i, paymentInfo] of this.props.data.entries()){\r\n      console.log(i);\r\n      let orgInfo = {   \r\n        doctorName: paymentInfo.doctorName, \r\n        patientName: paymentInfo.patientName, \r\n        clinicalTrialName: paymentInfo.clinicalTrialName, \r\n        paymentMode: paymentInfo.paymentMode, \r\n        transactionId: paymentInfo.transactionId,\r\n        remark: paymentInfo.remark,\r\n        amount: paymentInfo.paymentAmount, \r\n        status: 'Paid',   \r\n      }      \r\n      rowsItem.push(orgInfo);\r\n    }      \r\n    \r\n    const columns = [ \r\n      {\r\n        label: 'Investigator Name',\r\n        name: 'doctorName',\r\n      },     \r\n      {\r\n        label: 'Patient Name',\r\n        name: 'patientName',\r\n      },\r\n      \r\n      {\r\n        label: 'Clinical Trial',\r\n        name: 'clinicalTrialName',\r\n      },\r\n\r\n      {\r\n        label: 'Payment Mode',\r\n        name: 'paymentMode',\r\n      },\r\n\r\n      \r\n      {\r\n        label: 'Amount',\r\n        name: 'amount',\r\n      },\r\n      {\r\n        label: 'Reference Number',\r\n        name: 'transactionId',\r\n      },\r\n      {\r\n        label: 'Remark',\r\n        name: 'remark',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },      \r\n      \r\n    ];\r\n    const options = {\r\n      search: false,viewColumns: false,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: false,\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Processing........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        \r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default StoreData;","import React, { Component } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Col, Row, Button, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter, Form} from 'reactstrap';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport commonService from '../../../../core/services/commonService';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Loader from '../../../Loader/Loader';\r\nimport PaymentData from './PaidPaymentData';\r\nimport './Payment.css'\r\n\r\nclass PaidPayment extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      formField: {},\r\n      modal: false,\r\n      activeTab: '1',\r\n      filterItem: {},\r\n      doctorList: [],\r\n      userList: [],\r\n      clinicalTrialList: [],\r\n      paymentList: [],\r\n      loading: false,\r\n      errors: {},\r\n      formProccessing: false,\r\n      rowIndex: -1\r\n    }\r\n\r\n    \r\n    this.resetSearchFilter = this.resetSearchFilter.bind(this);\r\n    this.filterList = this.filterList.bind(this);\r\n    \r\n    \r\n  }\r\n  // Fetch the Employee List\r\n  componentDidMount() { \r\n   this.paymentList();\r\n   this.doctorList();\r\n   this.patientList();\r\n   this.clinicalTrialList();\r\n\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      errors: {},\r\n      formField: {},\r\n      rowIndex: -1\r\n\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  paymentList(filterItem = {}) {\r\n    this.setState( { loading: true}, () => { \r\n    let paymentQuery = \"\";\r\n    paymentQuery = \"?isPaymentType=1&status=2\";\r\n    if(filterItem.patientId !== undefined && filterItem.patientId !== \"\" ) \r\n      paymentQuery += (paymentQuery !==\"\" ) ? \"&patientId=\"+filterItem.patientId: \"?patientId=\"+filterItem.patientId;\r\n    if(filterItem.doctorId !== undefined && filterItem.doctorId !== \"\" ) \r\n      paymentQuery += (paymentQuery !==\"\" ) ? \"&doctorId=\"+filterItem.doctorId: \"?doctorId=\"+filterItem.doctorId;\r\n    if(filterItem.clinicalTrialId !== undefined && filterItem.clinicalTrialId !== \"\" ) \r\n      paymentQuery += (paymentQuery !==\"\" ) ? \"&clinicalTrialId=\"+filterItem.clinicalTrialId: \"?clinicalTrialId=\"+filterItem.clinicalTrialId;\r\n    commonService.getAPIWithAccessToken(\"payment\"+paymentQuery)\r\n      .then( res => {\r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( {  loading: false } );\r\n          toast.error(res.data.message);    \r\n          return;\r\n        }   \r\n        \r\n        this.setState({loading: false, paymentList: res.data.data});     \r\n        \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.propsHistory.history.push('/login');\r\n        }\r\n        else { \r\n          this.setState( {  loading: false } );        \r\n          toast.error(err.message); \r\n\r\n        }\r\n      } )\r\n    })\r\n  }\r\n\r\n\r\n  doctorList(filterItem = {}) {\r\n    let doctorQuery = \"\";\r\n    \r\n    if(filterItem.country !== undefined && filterItem.country !== \"\" ) \r\n      doctorQuery += (doctorQuery !==\"\" ) ? \"&country=\"+filterItem.country: \"?country=\"+filterItem.country;\r\n    if(filterItem.state !== undefined && filterItem.state !== \"\" ) \r\n      doctorQuery += (doctorQuery !==\"\" ) ? \"&state=\"+filterItem.state: \"?state=\"+filterItem.state;\r\n    if(filterItem.custom_search !== undefined && filterItem.custom_search !== \"\" ) \r\n      doctorQuery += (doctorQuery !==\"\" ) ? \"&keyword=\"+filterItem.custom_search: \"?keyword=\"+filterItem.custom_search;\r\n    if(filterItem.selectedSpecialization !== undefined && filterItem.selectedSpecialization !== \"\" ) \r\n      doctorQuery += (doctorQuery !==\"\" ) ? \"&specializationId=\"+filterItem.selectedSpecialization: \"?specializationId=\"+filterItem.selectedSpecialization;\r\n    this.setState({loading: true}, () => {  \r\n      commonService.getAPIWithAccessToken('doctors'+doctorQuery)\r\n        .then( res => {\r\n          \r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }   \r\n\r\n          this.setState({loading:false, doctorList: res.data.data});     \r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.propsHistory.history.push('/login');\r\n          }\r\n          else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    });  \r\n  }\r\n\r\n  patientList(filterItem = {}) {\r\n\r\n    let patientQuery = \"\";\r\n    if(filterItem.practiceCategory !== undefined && filterItem.practiceCategory !== \"\" ) \r\n      patientQuery += (patientQuery !==\"\" ) ? \"&practiceCategory=\"+filterItem.practiceCategory: \"?practiceCategory=\"+filterItem.practiceCategory;\r\n    if(filterItem.practiceSubCategory !== undefined && filterItem.practiceSubCategory !== \"\" ) \r\n      patientQuery += (patientQuery !==\"\" ) ? \"&practiceSubCategory=\"+filterItem.practiceSubCategory: \"?practiceSubCategory=\"+filterItem.practiceSubCategory;\r\n   commonService.getAPIWithAccessToken(`profile/list`+patientQuery)\r\n      .then( res => {\r\n        console.log(res);\r\n         \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( {  loading: false } );\r\n          toast.error(res.data.message);    \r\n          return;\r\n        }   \r\n        \r\n        this.setState({loading:false, userList: res.data.data.profileList});     \r\n       \r\n      } )\r\n      .catch( err => {   \r\n             \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.propsHistory.history.push('/login');\r\n        }\r\n        else {\r\n          this.setState( { loading: false } );\r\n          toast.error(err.message); \r\n        }  \r\n      } )\r\n  }\r\n\r\n  clinicalTrialList(filterItem = {}) {\r\n    commonService.getAPIWithAccessToken(\"clinical-trial\")\r\n      .then( res => {\r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( {  loading: false } );\r\n          toast.error(res.data.message);    \r\n          return;\r\n        }   \r\n        \r\n        this.setState({loading: false, clinicalTrialList: res.data.data});     \r\n        \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.propsHistory.history.push('/login');\r\n        }\r\n        else { \r\n          this.setState( {  loading: false } );        \r\n          toast.error(err.message); \r\n\r\n        }\r\n      } )\r\n  }\r\n\r\n  filterList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.paymentList(filterItem);\r\n  }\r\n  \r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n  resetSearchFilter() {\r\n    this.setState({filterItem: {doctorId: \"\", patientId: \"\", clinicalTrialId: \"\" }});\r\n    this.paymentList();\r\n  }\r\n\r\n  onDismiss = () => { this.setState({visible: false})}\r\n\r\n  toggle = tab => {\r\n    if(this.state.activeTab !== tab) this.setState({activeTab: tab});\r\n  } \r\n\r\n\r\n  \r\n  \r\n\r\n  render() {\r\n\r\n       \r\n    return(\r\n        <Row>\r\n              <Col md={12}>\r\n                <div className=\"search-filter\">\r\n                <Row>                      \r\n                  \r\n                  <Col md={\"3\"}>\r\n                    <FormGroup> \r\n                      <Label htmlFor=\"filter_doctor_id\">Search By Doctor</Label>            \r\n                      <Input type=\"select\" placeholder=\"Search By Doctor\" id=\"doctorId\" name=\"doctorId\" value={this.state.filterItem.doctorId} onChange={this.changeFilterHandler}>\r\n                          <option value = \"\">Select</option>\r\n                          {this.state.doctorList.map((userInfo, index) =>\r\n                            <option value = {userInfo.authId} key={index}>{userInfo.title} {userInfo.firstName} {userInfo.lastName}</option>\r\n                          )}\r\n                      </Input>\r\n                    </FormGroup>  \r\n                  </Col>\r\n                  <Col md={\"3\"}>\r\n                    <FormGroup> \r\n                      <Label htmlFor=\"filter_doctor_id\">Search By Patient</Label>            \r\n                      <Input type=\"select\" placeholder=\"Search By Patient\" id=\"patientId\" name=\"patientId\" value={this.state.filterItem.patientId} onChange={this.changeFilterHandler}>\r\n                          <option value = \"\">Select</option>\r\n                          {this.state.userList.map((userInfo, index) =>\r\n                            <option value = {userInfo.authId} key={index}>{userInfo.firstName} {userInfo.lastName}</option>\r\n                          )}\r\n                      </Input>\r\n                    </FormGroup>  \r\n                  </Col>\r\n                  <Col md={\"3\"}>\r\n                    <FormGroup> \r\n                      <Label htmlFor=\"filter_doctor_id\">Search By Clinical Trial</Label>            \r\n                      <Input type=\"select\" placeholder=\"Search By Clinical Trial\" id=\"clinicalTrialId\" name=\"clinicalTrialId\" value={this.state.filterItem.clinicalTrialId} onChange={this.changeFilterHandler}>\r\n                          <option value = \"\">Select</option>\r\n                          {this.state.clinicalTrialList.map((userInfo, index) =>\r\n                            <option value = {userInfo.clinicalTrialId} key={index}>{userInfo.clinicalTrial} </option>\r\n                          )}\r\n                      </Input>\r\n                    </FormGroup>  \r\n                  </Col>\r\n                  <Col md={\"3\"}>\r\n                    <FormGroup className=\"filter-button-section\"> \r\n                      <Button className=\"search-btn\" type=\"button\" onClick={this.filterList}>Search</Button> \r\n                      <Button className=\"search-btn\" id=\"resetButton\" type=\"button\" onClick={this.resetSearchFilter}>Reset</Button> \r\n                    </FormGroup>             \r\n                  </Col>\r\n                </Row>\r\n                 </div>  \r\n              </Col>\r\n\r\n              <Col lg={12}>\r\n                <PaymentData data={this.state.paymentList}  dataTableLoadingStatus = {this.state.loading} />\r\n              </Col>  \r\n            </Row>\r\n    )\r\n    \r\n  }\r\n}\r\n\r\n\r\n\r\nexport default PaidPayment;\r\n","import React, { Component } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Col, Row, Button, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter, Form} from 'reactstrap';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport commonService from '../../../../core/services/commonService';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Loader from '../../../Loader/Loader';\r\nimport PaymentData from './PaymentData';\r\nimport PaidPayment from './PaidPayment';\r\nimport './Payment.css'\r\n\r\nclass Payment extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      formField: {},\r\n      modal: false,\r\n      activeTab: '1',\r\n      filterItem: {},\r\n      doctorList: [],\r\n      userList: [],\r\n      clinicalTrialList: [],\r\n      paymentList: [],\r\n      loading: false,\r\n      errors: {},\r\n      formProccessing: false,\r\n      rowIndex: -1\r\n    }\r\n\r\n    this.handlePaymentData = this.handlePaymentData.bind(this);\r\n    this.resetSearchFilter = this.resetSearchFilter.bind(this);\r\n    this.filterList = this.filterList.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    \r\n    \r\n  }\r\n  // Fetch the Employee List\r\n  componentDidMount() { \r\n   this.paymentList();\r\n   this.doctorList();\r\n   this.patientList();\r\n   this.clinicalTrialList();\r\n\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      errors: {},\r\n      formField: {},\r\n      rowIndex: -1\r\n\r\n    });\r\n  }\r\n\r\n  handlePaymentData(rowIndex) {\r\n    this.setState({rowIndex: rowIndex, modal: true})\r\n  }\r\n\r\n  paymentList(filterItem = {}) {\r\n    this.setState( { loading: true}, () => { \r\n    let paymentQuery = \"\";\r\n    paymentQuery = \"?isPaymentType=1&status=0\";\r\n    if(filterItem.patientId !== undefined && filterItem.patientId !== \"\" ) \r\n      paymentQuery += (paymentQuery !==\"\" ) ? \"&patientId=\"+filterItem.patientId: \"?patientId=\"+filterItem.patientId;\r\n    if(filterItem.doctorId !== undefined && filterItem.doctorId !== \"\" ) \r\n      paymentQuery += (paymentQuery !==\"\" ) ? \"&doctorId=\"+filterItem.doctorId: \"?doctorId=\"+filterItem.doctorId;\r\n    if(filterItem.clinicalTrialId !== undefined && filterItem.clinicalTrialId !== \"\" ) \r\n      paymentQuery += (paymentQuery !==\"\" ) ? \"&clinicalTrialId=\"+filterItem.clinicalTrialId: \"?clinicalTrialId=\"+filterItem.clinicalTrialId;\r\n    commonService.getAPIWithAccessToken(\"payment\"+paymentQuery)\r\n      .then( res => {\r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( {  loading: false } );\r\n          toast.error(res.data.message);    \r\n          return;\r\n        }   \r\n        \r\n        this.setState({loading: false, paymentList: res.data.data});     \r\n        \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else { \r\n          this.setState( {  loading: false } );        \r\n          toast.error(err.message); \r\n\r\n        }\r\n      } )\r\n    })\r\n  }\r\n\r\n\r\n  doctorList(filterItem = {}) {\r\n    let doctorQuery = \"\";\r\n    \r\n    if(filterItem.country !== undefined && filterItem.country !== \"\" ) \r\n      doctorQuery += (doctorQuery !==\"\" ) ? \"&country=\"+filterItem.country: \"?country=\"+filterItem.country;\r\n    if(filterItem.state !== undefined && filterItem.state !== \"\" ) \r\n      doctorQuery += (doctorQuery !==\"\" ) ? \"&state=\"+filterItem.state: \"?state=\"+filterItem.state;\r\n    if(filterItem.custom_search !== undefined && filterItem.custom_search !== \"\" ) \r\n      doctorQuery += (doctorQuery !==\"\" ) ? \"&keyword=\"+filterItem.custom_search: \"?keyword=\"+filterItem.custom_search;\r\n    if(filterItem.selectedSpecialization !== undefined && filterItem.selectedSpecialization !== \"\" ) \r\n      doctorQuery += (doctorQuery !==\"\" ) ? \"&specializationId=\"+filterItem.selectedSpecialization: \"?specializationId=\"+filterItem.selectedSpecialization;\r\n    this.setState({loading: true}, () => {  \r\n      commonService.getAPIWithAccessToken('doctors'+doctorQuery)\r\n        .then( res => {\r\n          \r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }   \r\n\r\n          this.setState({loading:false, doctorList: res.data.data});     \r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    });  \r\n  }\r\n\r\n  patientList(filterItem = {}) {\r\n\r\n    let patientQuery = \"\";\r\n    if(filterItem.practiceCategory !== undefined && filterItem.practiceCategory !== \"\" ) \r\n      patientQuery += (patientQuery !==\"\" ) ? \"&practiceCategory=\"+filterItem.practiceCategory: \"?practiceCategory=\"+filterItem.practiceCategory;\r\n    if(filterItem.practiceSubCategory !== undefined && filterItem.practiceSubCategory !== \"\" ) \r\n      patientQuery += (patientQuery !==\"\" ) ? \"&practiceSubCategory=\"+filterItem.practiceSubCategory: \"?practiceSubCategory=\"+filterItem.practiceSubCategory;\r\n   commonService.getAPIWithAccessToken(`profile/list`+patientQuery)\r\n      .then( res => {\r\n        console.log(res);\r\n         \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( {  loading: false } );\r\n          toast.error(res.data.message);    \r\n          return;\r\n        }   \r\n        \r\n        this.setState({loading:false, userList: res.data.data.profileList});     \r\n       \r\n      } )\r\n      .catch( err => {   \r\n             \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else {\r\n          this.setState( { loading: false } );\r\n          toast.error(err.message); \r\n        }  \r\n      } )\r\n  }\r\n\r\n  clinicalTrialList(filterItem = {}) {\r\n    commonService.getAPIWithAccessToken(\"clinical-trial\")\r\n      .then( res => {\r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( {  loading: false } );\r\n          toast.error(res.data.message);    \r\n          return;\r\n        }   \r\n        \r\n        this.setState({loading: false, clinicalTrialList: res.data.data});     \r\n        \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else { \r\n          this.setState( {  loading: false } );        \r\n          toast.error(err.message); \r\n\r\n        }\r\n      } )\r\n  }\r\n\r\n  filterList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.paymentList(filterItem);\r\n  }\r\n  \r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n  resetSearchFilter() {\r\n\r\n    this.setState({filterItem: {doctorId: \"\", patientId: \"\", clinicalTrialId: \"\" }});\r\n    this.paymentList();\r\n  }\r\n\r\n  onDismiss = () => { this.setState({visible: false})}\r\n\r\n  toggle = tab => {\r\n    if(this.state.activeTab !== tab) this.setState({activeTab: tab});\r\n  } \r\n\r\n\r\n  /* Submit Form Handler*/\r\n  submitHandler (event) {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    if(this.validateForm()){\r\n      return false;\r\n    }\r\n    this.setState( { formProccessing: true}, () => {\r\n      const formInputField = this.state.formField;\r\n      let transactionId = formInputField.transactionId || \"\";\r\n      let formData = {\r\n        amount: formInputField.amount,\r\n        paymentMode: formInputField.paymentMode,\r\n        transactionId: formInputField.paymentMode !== \"Cash\" ?  transactionId : \"\",\r\n        remark: formInputField.remark || \"\"\r\n      };\r\n\r\n      const rowIndex = this.state.rowIndex;\r\n      if(rowIndex > -1) {\r\n        const paymentInfo = this.state.paymentList[rowIndex];\r\n        formData.paymentId = paymentInfo.paymentId;\r\n        commonService.putAPIWithAccessToken('payment', formData)\r\n        .then( res => {\r\n          \r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n           \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          \r\n          this.setState({ modal: false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.paymentList();\r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n        } )\r\n      }\r\n      else\r\n        this.setState({formProccessing: false})\r\n      \r\n    } );\r\n    \r\n  };\r\n  /* Input Field On changes*/\r\n  changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField });\r\n  };\r\n\r\n  /* Validate Form */\r\n  validateForm() {\r\n    let formValid = false;\r\n    let formField = this.state.formField; \r\n    let errors = {};\r\n    if(formField.paymentMode === undefined || formField.paymentMode.trim() === \"\"){\r\n      formValid = true;\r\n      errors['paymentMode'] = \"Payment Mode field required!\";\r\n    }\r\n\r\n    if(formField.amount === undefined || formField.amount.trim() === \"\"){\r\n      formValid = true;\r\n      errors['amount'] = \"Amount field required!\";\r\n    }\r\n\r\n    \r\n    this.setState({errors:  errors});\r\n    return formValid;\r\n    \r\n  }\r\n  \r\n\r\n  render() {\r\n\r\n       \r\n    \r\n    const { activeTab, visible, errors, formProccessing, loading } = this.state; \r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n    const processingBtnText = <>Submit <i className=\"fa fa-spinner\"></i></>;    \r\n    return (\r\n     <div className=\"tabs-info-card\">\r\n      {loaderElement}\r\n      <Nav tabs>\r\n        <NavItem>\r\n          <NavLink\r\n            className={ activeTab === '1' ? \"active\" : \"\" }\r\n            onClick={() => { this.toggle('1'); }}\r\n          >\r\n            Due Payment\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={ activeTab === '2' ? \"active\" : \"\" }\r\n            onClick={() => { this.toggle('2'); }}\r\n          >\r\n            Paid Payment\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n          <Row>\r\n              <Col md={12}>\r\n                <div className=\"search-filter\">\r\n                <Row>                      \r\n                  \r\n                  <Col md={\"3\"}>\r\n                    <FormGroup> \r\n                      <Label htmlFor=\"filter_doctor_id\">Search By Doctor</Label>            \r\n                      <Input type=\"select\" placeholder=\"Search By Doctor\" id=\"doctorId\" name=\"doctorId\" value={this.state.filterItem.doctorId} onChange={this.changeFilterHandler}>\r\n                          <option value = \"\">Select</option>\r\n                          {this.state.doctorList.map((userInfo, index) =>\r\n                            <option value = {userInfo.authId} key={index}>{userInfo.title} {userInfo.firstName} {userInfo.lastName}</option>\r\n                          )}\r\n                      </Input>\r\n                    </FormGroup>  \r\n                  </Col>\r\n                  <Col md={\"3\"}>\r\n                    <FormGroup> \r\n                      <Label htmlFor=\"filter_doctor_id\">Search By Patient</Label>            \r\n                      <Input type=\"select\" placeholder=\"Search By Patient\" id=\"patientId\" name=\"patientId\" value={this.state.filterItem.patientId} onChange={this.changeFilterHandler}>\r\n                          <option value = \"\">Select</option>\r\n                          {this.state.userList.map((userInfo, index) =>\r\n                            <option value = {userInfo.authId} key={index}>{userInfo.firstName} {userInfo.lastName}</option>\r\n                          )}\r\n                      </Input>\r\n                    </FormGroup>  \r\n                  </Col>\r\n                  <Col md={\"3\"}>\r\n                    <FormGroup> \r\n                      <Label htmlFor=\"filter_doctor_id\">Search By Clinical Trial</Label>            \r\n                      <Input type=\"select\" placeholder=\"Search By Clinical Trial\" id=\"clinicalTrialId\" name=\"clinicalTrialId\" value={this.state.filterItem.clinicalTrialId} onChange={this.changeFilterHandler}>\r\n                          <option value = \"\">Select</option>\r\n                          {this.state.clinicalTrialList.map((userInfo, index) =>\r\n                            <option value = {userInfo.clinicalTrialId} key={index}>{userInfo.clinicalTrial} </option>\r\n                          )}\r\n                      </Input>\r\n                    </FormGroup>  \r\n                  </Col>\r\n                  <Col md={\"3\"}>\r\n                    <FormGroup className=\"filter-button-section\"> \r\n                      <Button className=\"search-btn\" type=\"button\" onClick={this.filterList}>Search</Button> \r\n                      <Button className=\"search-btn\" id=\"resetButton\" type=\"button\" onClick={this.resetSearchFilter}>Reset</Button> \r\n                    </FormGroup>             \r\n                  </Col>\r\n                </Row>\r\n                 </div>  \r\n              </Col>\r\n\r\n              <Col lg={12}>\r\n                <PaymentData data={this.state.paymentList} updatePaymentData = {this.handlePaymentData} dataTableLoadingStatus = {this.state.loading} />\r\n              </Col>  \r\n            </Row>\r\n            <Modal isOpen={this.state.modal} toggle={this.toggleModal} className=\"full-width-modal-section organization-modal\">\r\n              <ModalHeader toggle={this.toggleModal}>Payment</ModalHeader>\r\n              <Form onSubmit={this.submitHandler} noValidate>\r\n                <ModalBody>\r\n                  <Row>\r\n                    <Col md={\"12\"}>  \r\n                      <FormGroup> \r\n                        <Label htmlFor=\"paymentMode\">Payment Mode</Label>            \r\n                        <Input type=\"select\" id=\"paymentMode\" name=\"paymentMode\" invalid={errors['paymentMode'] !== undefined && errors['paymentMode'] !== \"\"} required value={this.state.formField.paymentMode} onChange={this.changeHandler}>\r\n                            <option value = \"\">Select</option>\r\n                            <option value = \"Cash\">Cash</option>\r\n                            <option value = \"Cheque\">Cheque</option>\r\n                            <option value = \"Net Banking\">Net Banking</option>\r\n                            <option value = \"Other\">Other</option>\r\n                        </Input>\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors['paymentMode']}\r\n                        </div>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    {\r\n                      this.state.formField.paymentMode !== undefined && this.state.formField.paymentMode !== \"\" && this.state.formField.paymentMode !== \"Cash\" && <Col md={\"12\"}>  \r\n                        <FormGroup> \r\n                          <Label htmlFor=\"transactionId\">{this.state.formField.paymentMode === \"Cheque\" ? \"Cheque Number\" : \"Refernce Number\"}</Label>            \r\n                          <Input type=\"text\" placeholder={this.state.formField.paymentMode === \"Cheque\" ? \"Cheque Number\" : \"Refernce Number\"}  id=\"transactionId\" name=\"transactionId\" value={this.state.formField.transactionId} onChange={this.changeHandler}  />\r\n                        \r\n                        </FormGroup>\r\n                      </Col>\r\n                    }\r\n                    <Col md={\"12\"}>  \r\n                      <FormGroup> \r\n                        <Label htmlFor=\"amount\">Amount</Label>            \r\n                        <Input type=\"number\" placeholder=\"Amount\" invalid={errors['amount'] !== undefined && errors['amount'] !== \"\"}  id=\"amount\" name=\"amount\" value={this.state.formField.amount} onChange={this.changeHandler} required />\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors['amount']}\r\n                        </div>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={\"12\"}>  \r\n                      <FormGroup> \r\n                        <Label htmlFor=\"remark\">Remark</Label>            \r\n                        <Input type=\"text\" placeholder=\"Remark\"  id=\"remark\" name=\"remark\" value={this.state.formField.remark} onChange={this.changeHandler}  />\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors['remark']}\r\n                        </div>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    \r\n                  </Row>           \r\n                </ModalBody>\r\n                <ModalFooter>\r\n                  <Button color=\"primary\" disabled={formProccessing} type=\"submit\">{formProccessing ? processingBtnText : 'Submit' }</Button>\r\n                  <Button color=\"secondary\" onClick={this.toggleModal}>Cancel</Button>\r\n                </ModalFooter>\r\n              </Form>\r\n            </Modal>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n          <PaidPayment propsHistory = {this.props}/>\r\n        </TabPane>\r\n        \r\n      </TabContent>\r\n    </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Payment;\r\n","import React from 'react';\nimport \"./Loader.css\"\nconst Loader = () => {\n    return (\n        <div className=\"loaderSection\">\n             <div className=\"spinner-border text-primary\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n              </div>\n        </div>\n    );\n}\n\nexport default Loader;","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}